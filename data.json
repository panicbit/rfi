{"open_rfcs":[{"number":"0016","short_title":"more-attributes","issues":[{"number":15701,"title":"Tracking issue for stmt_expr_attributes: Add attributes to expressions, etc.","state":"OPEN","url":"https://github.com/rust-lang/rust/issues/15701","owner":"rust-lang","repo":"rust"}],"state":"OPEN","file_name":"0016-more-attributes.md"},{"number":"0019","short_title":"opt-in-builtin-traits","issues":[{"number":13231,"title":"opt-in built-in bounds traits RFC tracker (optin_builtin_traits)","state":"OPEN","url":"https://github.com/rust-lang/rust/issues/13231","owner":"rust-lang","repo":"rust"}],"state":"OPEN","file_name":"0019-opt-in-builtin-traits.md"},{"number":"0066","short_title":"better-temporary-lifetimes","issues":[{"number":15023,"title":"Better temporary lifetimes (tracking issue for RFC 66)","state":"OPEN","url":"https://github.com/rust-lang/rust/issues/15023","owner":"rust-lang","repo":"rust"}],"state":"OPEN","file_name":"0066-better-temporary-lifetimes.md"},{"number":"0107","short_title":"pattern-guards-with-bind-by-move","issues":[{"number":15287,"title":"Implement Pattern Guards with Bind-By-Move","state":"OPEN","url":"https://github.com/rust-lang/rust/issues/15287","owner":"rust-lang","repo":"rust"}],"state":"OPEN","file_name":"0107-pattern-guards-with-bind-by-move.md"},{"number":"0135","short_title":"where","issues":[{"number":17657,"title":"Implement where clauses","state":"OPEN","url":"https://github.com/rust-lang/rust/issues/17657","owner":"rust-lang","repo":"rust"}],"state":"OPEN","file_name":"0135-where.md"},{"number":"0213","short_title":"defaulted-type-params","issues":[{"number":27336,"title":"Tracking Issue for RFC 213: Default Type Parameter Fallback","state":"OPEN","url":"https://github.com/rust-lang/rust/issues/27336","owner":"rust-lang","repo":"rust"}],"state":"OPEN","file_name":"0213-defaulted-type-params.md"},{"number":"0243","short_title":"trait-based-exception-handling","issues":[{"number":31436,"title":"Tracking issue for `?` operator and `catch` expressions (RFC 243, `question_mark` feature)","state":"OPEN","url":"https://github.com/rust-lang/rust/issues/31436","owner":"rust-lang","repo":"rust"}],"state":"OPEN","file_name":"0243-trait-based-exception-handling.md"},{"number":"0401","short_title":"coercions","issues":[{"number":18469,"title":"Implement revised coercion rules","state":"OPEN","url":"https://github.com/rust-lang/rust/issues/18469","owner":"rust-lang","repo":"rust"}],"state":"OPEN","file_name":"0401-coercions.md"},{"number":"0495","short_title":"array-pattern-changes","issues":[{"number":23121,"title":"Tracking issue for RFC #495 (features `slice_patterns` and `advanced_slice_patterns`)","state":"OPEN","url":"https://github.com/rust-lang/rust/issues/23121","owner":"rust-lang","repo":"rust"}],"state":"OPEN","file_name":"0495-array-pattern-changes.md"},{"number":"0501","short_title":"consistent_no_prelude_attributes","issues":[{"number":20561,"title":"Tracking issue for Consistent no-prelude attribute (RFC 501)","state":"OPEN","url":"https://github.com/rust-lang/rust/issues/20561","owner":"rust-lang","repo":"rust"}],"state":"OPEN","file_name":"0501-consistent_no_prelude_attributes.md"},{"number":"0803","short_title":"type-ascription","issues":[{"number":23416,"title":"Type ascription (tracking issue for RFC 803)","state":"OPEN","url":"https://github.com/rust-lang/rust/issues/23416","owner":"rust-lang","repo":"rust"}],"state":"OPEN","file_name":"0803-type-ascription.md"},{"number":"0911","short_title":"const-fn","issues":[{"number":24111,"title":"const fn tracking issue (RFC 911)","state":"OPEN","url":"https://github.com/rust-lang/rust/issues/24111","owner":"rust-lang","repo":"rust"}],"state":"OPEN","file_name":"0911-const-fn.md"},{"number":"0982","short_title":"dst-coercion","issues":[{"number":18598,"title":"DST/custom coercions","state":"OPEN","url":"https://github.com/rust-lang/rust/issues/18598","owner":"rust-lang","repo":"rust"}],"state":"OPEN","file_name":"0982-dst-coercion.md"},{"number":"1131","short_title":"likely-intrinsic","issues":[{"number":26179,"title":"Implement likely/unlikely intrinsic (tracking issue for RFC 1131)","state":"OPEN","url":"https://github.com/rust-lang/rust/issues/26179","owner":"rust-lang","repo":"rust"}],"state":"OPEN","file_name":"1131-likely-intrinsic.md"},{"number":"1199","short_title":"simd-infrastructure","issues":[{"number":27731,"title":"Tracking issue for SIMD support","state":"OPEN","url":"https://github.com/rust-lang/rust/issues/27731","owner":"rust-lang","repo":"rust"}],"state":"OPEN","file_name":"1199-simd-infrastructure.md"},{"number":"1201","short_title":"naked-fns","issues":[{"number":32408,"title":"Tracking issue for naked fns (RFC #1201)","state":"OPEN","url":"https://github.com/rust-lang/rust/issues/32408","owner":"rust-lang","repo":"rust"}],"state":"OPEN","file_name":"1201-naked-fns.md"},{"number":"1210","short_title":"impl-specialization","issues":[{"number":31844,"title":"Tracking issue for specialization (RFC 1210)","state":"OPEN","url":"https://github.com/rust-lang/rust/issues/31844","owner":"rust-lang","repo":"rust"}],"state":"OPEN","file_name":"1210-impl-specialization.md"},{"number":"1214","short_title":"projections-lifetimes-and-wf","issues":[{"number":27579,"title":"Projections, lifetimes, and WF tracking issue (RFC 1214)","state":"OPEN","url":"https://github.com/rust-lang/rust/issues/27579","owner":"rust-lang","repo":"rust"}],"state":"OPEN","file_name":"1214-projections-lifetimes-and-wf.md"},{"number":"1216","short_title":"bang-type","issues":[{"number":35121,"title":"Tracking issue for promoting `!` to a type (RFC 1216)","state":"OPEN","url":"https://github.com/rust-lang/rust/issues/35121","owner":"rust-lang","repo":"rust"}],"state":"OPEN","file_name":"1216-bang-type.md"},{"number":"1229","short_title":"compile-time-asserts","issues":[{"number":28238,"title":"Tracking issue for constant prop not causing add'l errors (RFC #1229)","state":"OPEN","url":"https://github.com/rust-lang/rust/issues/28238","owner":"rust-lang","repo":"rust"}],"state":"OPEN","file_name":"1229-compile-time-asserts.md"},{"number":"1238","short_title":"nonparametric-dropck","issues":[{"number":28498,"title":"Nonparametric dropck (tracking issue for RFC 1238)","state":"OPEN","url":"https://github.com/rust-lang/rust/issues/28498","owner":"rust-lang","repo":"rust"}],"state":"OPEN","file_name":"1238-nonparametric-dropck.md"},{"number":"1240","short_title":"repr-packed-unsafe-ref","issues":[{"number":27060,"title":"repr(packed) allows invalid unaligned loads","state":"OPEN","url":"https://github.com/rust-lang/rust/issues/27060","owner":"rust-lang","repo":"rust"}],"state":"OPEN","file_name":"1240-repr-packed-unsafe-ref.md"},{"number":"1260","short_title":"main-reexport","issues":[{"number":28937,"title":"Tracking issue for Allow a re-export for `main` (RFC 1260)","state":"OPEN","url":"https://github.com/rust-lang/rust/issues/28937","owner":"rust-lang","repo":"rust"}],"state":"OPEN","file_name":"1260-main-reexport.md"},{"number":"1268","short_title":"allow-overlapping-impls-on-marker-traits","issues":[{"number":29864,"title":"Tracking issue for allowing overlapping implementations for marker trait","state":"OPEN","url":"https://github.com/rust-lang/rust/issues/29864","owner":"rust-lang","repo":"rust"}],"state":"OPEN","file_name":"1268-allow-overlapping-impls-on-marker-traits.md"},{"number":"1327","short_title":"dropck-param-eyepatch","issues":[{"number":34761,"title":"`#[may_dangle]`, a refined dropck escape hatch (tracking issue for RFC 1327)","state":"OPEN","url":"https://github.com/rust-lang/rust/issues/34761","owner":"rust-lang","repo":"rust"}],"state":"OPEN","file_name":"1327-dropck-param-eyepatch.md"},{"number":"1331","short_title":"grammar-is-canonical","issues":[{"number":30942,"title":"Canonical Rust grammar distinct from parser (tracking issue for RFC #1331)","state":"OPEN","url":"https://github.com/rust-lang/rust/issues/30942","owner":"rust-lang","repo":"rust"}],"state":"OPEN","file_name":"1331-grammar-is-canonical.md"},{"number":"1398","short_title":"kinds-of-allocators","issues":[{"number":32838,"title":"Allocator traits and std::heap","state":"OPEN","url":"https://github.com/rust-lang/rust/issues/32838","owner":"rust-lang","repo":"rust"}],"state":"OPEN","file_name":"1398-kinds-of-allocators.md"},{"number":"1399","short_title":"repr-pack","issues":[{"number":33158,"title":"`#[repr(packed = \"N\")]` (tracking issue for RFC 1399)","state":"OPEN","url":"https://github.com/rust-lang/rust/issues/33158","owner":"rust-lang","repo":"rust"}],"state":"OPEN","file_name":"1399-repr-pack.md"},{"number":"1434","short_title":"contains-method-for-ranges","issues":[{"number":32311,"title":"Tracking issue for Range*::contains","state":"OPEN","url":"https://github.com/rust-lang/rust/issues/32311","owner":"rust-lang","repo":"rust"}],"state":"OPEN","file_name":"1434-contains-method-for-ranges.md"},{"number":"1444","short_title":"union","issues":[{"number":32836,"title":"Untagged unions (tracking issue for RFC 1444)","state":"OPEN","url":"https://github.com/rust-lang/rust/issues/32836","owner":"rust-lang","repo":"rust"}],"state":"OPEN","file_name":"1444-union.md"},{"number":"1445","short_title":"restrict-constants-in-patterns","issues":[{"number":31434,"title":"Restrict use of constants in patterns (RFC 1445)","state":"OPEN","url":"https://github.com/rust-lang/rust/issues/31434","owner":"rust-lang","repo":"rust"}],"state":"OPEN","file_name":"1445-restrict-constants-in-patterns.md"},{"number":"1504","short_title":"int128","issues":[{"number":35118,"title":"Tracking issue for 128-bit integer support (RFC 1504)","state":"OPEN","url":"https://github.com/rust-lang/rust/issues/35118","owner":"rust-lang","repo":"rust"}],"state":"OPEN","file_name":"1504-int128.md"},{"number":"1513","short_title":"less-unwinding","issues":[{"number":32837,"title":"Pluggable panic implementations (tracking issue for RFC 1513)","state":"OPEN","url":"https://github.com/rust-lang/rust/issues/32837","owner":"rust-lang","repo":"rust"}],"state":"OPEN","file_name":"1513-less-unwinding.md"},{"number":"1522","short_title":"conservative-impl-trait","issues":[{"number":34511,"title":"Tracking issue for `impl Trait` (RFC 1522, RFC 1951, RFC 2071)","state":"OPEN","url":"https://github.com/rust-lang/rust/issues/34511","owner":"rust-lang","repo":"rust"}],"state":"OPEN","file_name":"1522-conservative-impl-trait.md"},{"number":"1542","short_title":"try-from","issues":[{"number":33417,"title":"Tracking issue for TryFrom/TryInto traits","state":"OPEN","url":"https://github.com/rust-lang/rust/issues/33417","owner":"rust-lang","repo":"rust"}],"state":"OPEN","file_name":"1542-try-from.md"},{"number":"1543","short_title":"integer_atomics","issues":[{"number":32976,"title":"Tracking issue for adding more atomic integer types","state":"OPEN","url":"https://github.com/rust-lang/rust/issues/32976","owner":"rust-lang","repo":"rust"}],"state":"OPEN","file_name":"1543-integer_atomics.md"},{"number":"1548","short_title":"global-asm","issues":[{"number":35119,"title":"Tracking issue for global-asm support (RFC 1548)","state":"OPEN","url":"https://github.com/rust-lang/rust/issues/35119","owner":"rust-lang","repo":"rust"}],"state":"OPEN","file_name":"1548-global-asm.md"},{"number":"1566","short_title":"proc-macros","issues":[{"number":38356,"title":"Tracking issue for RFC 1566: Procedural macros","state":"OPEN","url":"https://github.com/rust-lang/rust/issues/38356","owner":"rust-lang","repo":"rust"}],"state":"OPEN","file_name":"1566-proc-macros.md"},{"number":"1576","short_title":"macros-literal-matcher","issues":[{"number":35625,"title":"Tracking issue for `literal` fragment specifier (RFC 1576)","state":"OPEN","url":"https://github.com/rust-lang/rust/issues/35625","owner":"rust-lang","repo":"rust"}],"state":"OPEN","file_name":"1576-macros-literal-matcher.md"},{"number":"1584","short_title":"macros","issues":[{"number":39412,"title":"Tracking issue: declarative macros 2.0","state":"OPEN","url":"https://github.com/rust-lang/rust/issues/39412","owner":"rust-lang","repo":"rust"}],"state":"OPEN","file_name":"1584-macros.md"},{"number":"1590","short_title":"macro-lifetimes","issues":[{"number":34303,"title":"Tracking issue for adding a `lifetime` specifier to `macro_rules!`","state":"OPEN","url":"https://github.com/rust-lang/rust/issues/34303","owner":"rust-lang","repo":"rust"}],"state":"OPEN","file_name":"1590-macro-lifetimes.md"},{"number":"1598","short_title":"generic_associated_types","issues":[{"number":44265,"title":"🔬 Tracking issue for generic associated types (GAT)","state":"OPEN","url":"https://github.com/rust-lang/rust/issues/44265","owner":"rust-lang","repo":"rust"}],"state":"OPEN","file_name":"1598-generic_associated_types.md"},{"number":"1644","short_title":"default-and-expanded-rustc-errors","issues":[{"number":34826,"title":"Tracking issue for enabling new error format by default","state":"CLOSED","url":"https://github.com/rust-lang/rust/issues/34826","owner":"rust-lang","repo":"rust"},{"number":34827,"title":"Tracking issue for --explain expansion","state":"OPEN","url":"https://github.com/rust-lang/rust/issues/34827","owner":"rust-lang","repo":"rust"}],"state":"OPEN","file_name":"1644-default-and-expanded-rustc-errors.md"},{"number":"1647","short_title":"allow-self-in-where-clauses","issues":[{"number":38864,"title":"Tracking issue for 'Allow `Self` to appear in the where clause of trait impls'","state":"OPEN","url":"https://github.com/rust-lang/rust/issues/38864","owner":"rust-lang","repo":"rust"}],"state":"OPEN","file_name":"1647-allow-self-in-where-clauses.md"},{"number":"1685","short_title":"deprecate-anonymous-parameters","issues":[{"number":41686,"title":"Tracking issue for RFC#1685: Deprecate anonymous parameters ","state":"OPEN","url":"https://github.com/rust-lang/rust/issues/41686","owner":"rust-lang","repo":"rust"}],"state":"OPEN","file_name":"1685-deprecate-anonymous-parameters.md"},{"number":"1717","short_title":"dllimport","issues":[{"number":37403,"title":"Tracking issue for #[link(kind)] connecting libraries on Windows","state":"OPEN","url":"https://github.com/rust-lang/rust/issues/37403","owner":"rust-lang","repo":"rust"}],"state":"OPEN","file_name":"1717-dllimport.md"},{"number":"1733","short_title":"trait-alias","issues":[{"number":41517,"title":"Tracking issue for trait aliases","state":"OPEN","url":"https://github.com/rust-lang/rust/issues/41517","owner":"rust-lang","repo":"rust"}],"state":"OPEN","file_name":"1733-trait-alias.md"},{"number":"1789","short_title":"as-cell","issues":[{"number":43038,"title":"Tracking issue for RFC 1789: Conversions from `&mut T` to `&Cell<T>`","state":"OPEN","url":"https://github.com/rust-lang/rust/issues/43038","owner":"rust-lang","repo":"rust"}],"state":"OPEN","file_name":"1789-as-cell.md"},{"number":"1824","short_title":"crates.io-default-ranking","issues":[{"number":41616,"title":"Tracking issue for RFC 1824: Proposal for default crate recommendation ranking","state":"OPEN","url":"https://github.com/rust-lang/rust/issues/41616","owner":"rust-lang","repo":"rust"}],"state":"OPEN","file_name":"1824-crates.io-default-ranking.md"},{"number":"1826","short_title":"change-doc-default-urls","issues":[{"number":44687,"title":"Tracking Issue for RFC 1826:  Change the default URL of doc.rust-lang.org","state":"OPEN","url":"https://github.com/rust-lang/rust/issues/44687","owner":"rust-lang","repo":"rust"}],"state":"OPEN","file_name":"1826-change-doc-default-urls.md"},{"number":"1849","short_title":"non-static-type-id","issues":[{"number":41875,"title":"Tracking issue for non_static_type_id","state":"OPEN","url":"https://github.com/rust-lang/rust/issues/41875","owner":"rust-lang","repo":"rust"}],"state":"OPEN","file_name":"1849-non-static-type-id.md"},{"number":"1857","short_title":"stabilize-drop-order","issues":[{"number":43034,"title":"Tracking issue for RFC 1857: Stabilize drop order","state":"OPEN","url":"https://github.com/rust-lang/rust/issues/43034","owner":"rust-lang","repo":"rust"}],"state":"OPEN","file_name":"1857-stabilize-drop-order.md"},{"number":"1859","short_title":"try-trait","issues":[{"number":31436,"title":"Tracking issue for `?` operator and `catch` expressions (RFC 243, `question_mark` feature)","state":"OPEN","url":"https://github.com/rust-lang/rust/issues/31436","owner":"rust-lang","repo":"rust"}],"state":"OPEN","file_name":"1859-try-trait.md"},{"number":"1861","short_title":"extern-types","issues":[{"number":43467,"title":"Tracking issue for RFC 1861: Extern types","state":"OPEN","url":"https://github.com/rust-lang/rust/issues/43467","owner":"rust-lang","repo":"rust"}],"state":"OPEN","file_name":"1861-extern-types.md"},{"number":"1866","short_title":"more-readable-assert-eq","issues":[{"number":41615,"title":"Tracking issue for RFC 1866: More readable assert_eq","state":"OPEN","url":"https://github.com/rust-lang/rust/issues/41615","owner":"rust-lang","repo":"rust"}],"state":"OPEN","file_name":"1866-more-readable-assert-eq.md"},{"number":"1868","short_title":"portability-lint","issues":[{"number":41619,"title":"Tracking issue for RFC 1868: A portability lint","state":"OPEN","url":"https://github.com/rust-lang/rust/issues/41619","owner":"rust-lang","repo":"rust"}],"state":"OPEN","file_name":"1868-portability-lint.md"},{"number":"1892","short_title":"uninitialized-uninhabited","issues":[{"number":53491,"title":"Tracking issue for RFC 1892, \"Deprecate uninitialized in favor of a new MaybeUninit type\"","state":"OPEN","url":"https://github.com/rust-lang/rust/issues/53491","owner":"rust-lang","repo":"rust"}],"state":"OPEN","file_name":"1892-uninitialized-uninhabited.md"},{"number":"1909","short_title":"unsized-rvalues","issues":[{"number":48055,"title":"Tracking issue for RFC #1909: Unsized Rvalues ","state":"OPEN","url":"https://github.com/rust-lang/rust/issues/48055","owner":"rust-lang","repo":"rust"}],"state":"OPEN","file_name":"1909-unsized-rvalues.md"},{"number":"1937","short_title":"ques-in-main","issues":[{"number":43301,"title":"Tracking issue for RFC 1937: `?` in `main`","state":"OPEN","url":"https://github.com/rust-lang/rust/issues/43301","owner":"rust-lang","repo":"rust"}],"state":"OPEN","file_name":"1937-ques-in-main.md"},{"number":"1940","short_title":"must-use-functions","issues":[{"number":43302,"title":"Tracking issue for RFC 1940: allow `#[must_use]` on functions","state":"OPEN","url":"https://github.com/rust-lang/rust/issues/43302","owner":"rust-lang","repo":"rust"}],"state":"OPEN","file_name":"1940-must-use-functions.md"},{"number":"1946","short_title":"intra-rustdoc-links","issues":[{"number":43466,"title":"Tracking issue for RFC 1946 - intra-rustdoc links","state":"OPEN","url":"https://github.com/rust-lang/rust/issues/43466","owner":"rust-lang","repo":"rust"}],"state":"OPEN","file_name":"1946-intra-rustdoc-links.md"},{"number":"1951","short_title":"expand-impl-trait","issues":[{"number":42183,"title":"Tracking issue for RFC 1951: Finalize syntax and parameter scoping for `impl Trait`, while expanding it to arguments","state":"OPEN","url":"https://github.com/rust-lang/rust/issues/42183","owner":"rust-lang","repo":"rust"}],"state":"OPEN","file_name":"1951-expand-impl-trait.md"},{"number":"1961","short_title":"clamp","issues":[{"number":44095,"title":"Tracking issue for clamp RFC","state":"OPEN","url":"https://github.com/rust-lang/rust/issues/44095","owner":"rust-lang","repo":"rust"}],"state":"OPEN","file_name":"1961-clamp.md"},{"number":"1977","short_title":"public-private-dependencies","issues":[{"number":44663,"title":"Tracking issue for RFC 1977: public & private dependencies","state":"OPEN","url":"https://github.com/rust-lang/rust/issues/44663","owner":"rust-lang","repo":"rust"}],"state":"OPEN","file_name":"1977-public-private-dependencies.md"},{"number":"1985","short_title":"tiered-browser-support","issues":[{"number":43035,"title":"Tracking issue for RFC 1985: Tiered browser support","state":"OPEN","url":"https://github.com/rust-lang/rust/issues/43035","owner":"rust-lang","repo":"rust"}],"state":"OPEN","file_name":"1985-tiered-browser-support.md"},{"number":"1990","short_title":"external-doc-attribute","issues":[{"number":44732,"title":"Tracking issue: rfc 1990 - add external doc attribute to rustc","state":"OPEN","url":"https://github.com/rust-lang/rust/issues/44732","owner":"rust-lang","repo":"rust"}],"state":"OPEN","file_name":"1990-external-doc-attribute.md"},{"number":"2000","short_title":"const-generics","issues":[{"number":44580,"title":"Tracking issue for const generics (RFC 2000)","state":"OPEN","url":"https://github.com/rust-lang/rust/issues/44580","owner":"rust-lang","repo":"rust"}],"state":"OPEN","file_name":"2000-const-generics.md"},{"number":"2005","short_title":"match-ergonomics","issues":[{"number":42640,"title":"tracking issue for default binding modes in match (RFC 2005, match_default_bindings)","state":"OPEN","url":"https://github.com/rust-lang/rust/issues/42640","owner":"rust-lang","repo":"rust"}],"state":"OPEN","file_name":"2005-match-ergonomics.md"},{"number":"2008","short_title":"non-exhaustive","issues":[{"number":44109,"title":"Tracking issue for RFC 2008: Future-proofing enums/structs with #[non_exhaustive] attribute","state":"OPEN","url":"https://github.com/rust-lang/rust/issues/44109","owner":"rust-lang","repo":"rust"}],"state":"OPEN","file_name":"2008-non-exhaustive.md"},{"number":"2011","short_title":"generic-assert","issues":[{"number":44838,"title":"Tracking issue for RFC 2011: nicer assert messages","state":"OPEN","url":"https://github.com/rust-lang/rust/issues/44838","owner":"rust-lang","repo":"rust"}],"state":"OPEN","file_name":"2011-generic-assert.md"},{"number":"2027","short_title":"object_safe_for_dispatch","issues":[{"number":43561,"title":"Tracking issue for tweaks to object safety (RFC 2027)","state":"OPEN","url":"https://github.com/rust-lang/rust/issues/43561","owner":"rust-lang","repo":"rust"}],"state":"OPEN","file_name":"2027-object_safe_for_dispatch.md"},{"number":"2033","short_title":"experimental-coroutines","issues":[{"number":43122,"title":"Tracking issue for RFC 2033: Experimentally add coroutines to Rust","state":"OPEN","url":"https://github.com/rust-lang/rust/issues/43122","owner":"rust-lang","repo":"rust"}],"state":"OPEN","file_name":"2033-experimental-coroutines.md"},{"number":"2043","short_title":"is-aligned-intrinsic","issues":[{"number":44488,"title":"Tracking issue for RFC 2043: Add `align_offset` intrinsic and `[T]::align_to` function ","state":"OPEN","url":"https://github.com/rust-lang/rust/issues/44488","owner":"rust-lang","repo":"rust"}],"state":"OPEN","file_name":"2043-is-aligned-intrinsic.md"},{"number":"2044","short_title":"license-rfcs","issues":[{"number":43461,"title":"Tracking issue for RFC 2044: dual-MIT/Apache2 licensing","state":"OPEN","url":"https://github.com/rust-lang/rust/issues/43461","owner":"rust-lang","repo":"rust"}],"state":"OPEN","file_name":"2044-license-rfcs.md"},{"number":"2045","short_title":"target-feature","issues":[{"number":44839,"title":"Tracking issue for RFC 2045: improving `#[target_feature]`","state":"OPEN","url":"https://github.com/rust-lang/rust/issues/44839","owner":"rust-lang","repo":"rust"}],"state":"OPEN","file_name":"2045-target-feature.md"},{"number":"2046","short_title":"label-break-value","issues":[{"number":48594,"title":"Tracking issue for RFC 2046, label-break-value","state":"OPEN","url":"https://github.com/rust-lang/rust/issues/48594","owner":"rust-lang","repo":"rust"}],"state":"OPEN","file_name":"2046-label-break-value.md"},{"number":"2052","short_title":"epochs","issues":[{"number":44581,"title":"Tracking issue for RFC 2052: Epochs","state":"OPEN","url":"https://github.com/rust-lang/rust/issues/44581","owner":"rust-lang","repo":"rust"}],"state":"OPEN","file_name":"2052-epochs.md"},{"number":"2056","short_title":"allow-trivial-where-clause-constraints","issues":[{"number":48214,"title":"Tracking issue for RFC #2056: Allow trivial constraints to appear in where clauses ","state":"OPEN","url":"https://github.com/rust-lang/rust/issues/48214","owner":"rust-lang","repo":"rust"}],"state":"OPEN","file_name":"2056-allow-trivial-where-clause-constraints.md"},{"number":"2057","short_title":"refcell-replace","issues":[{"number":43570,"title":"Tracking issue for RefCell::{replace, swap}","state":"OPEN","url":"https://github.com/rust-lang/rust/issues/43570","owner":"rust-lang","repo":"rust"}],"state":"OPEN","file_name":"2057-refcell-replace.md"},{"number":"2070","short_title":"panic-implementation","issues":[{"number":44489,"title":"Tracking issue for RFC 2070: stable mechanism to specify the behavior of panic! in no-std applications ","state":"OPEN","url":"https://github.com/rust-lang/rust/issues/44489","owner":"rust-lang","repo":"rust"}],"state":"OPEN","file_name":"2070-panic-implementation.md"},{"number":"2086","short_title":"allow-if-let-irrefutables","issues":[{"number":44495,"title":"Tracking issue for RFC 2086: Allow Irrefutable Patterns in if-let and while-let statements","state":"OPEN","url":"https://github.com/rust-lang/rust/issues/44495","owner":"rust-lang","repo":"rust"}],"state":"OPEN","file_name":"2086-allow-if-let-irrefutables.md"},{"number":"2089","short_title":"implied-bounds","issues":[{"number":44491,"title":"🔬 Tracking issue for RFC 2089: Implied bounds","state":"OPEN","url":"https://github.com/rust-lang/rust/issues/44491","owner":"rust-lang","repo":"rust"}],"state":"OPEN","file_name":"2089-implied-bounds.md"},{"number":"2091","short_title":"inline-semantic","issues":[{"number":47809,"title":"Tracking issue for RFC 2091: Implicit caller location","state":"OPEN","url":"https://github.com/rust-lang/rust/issues/47809","owner":"rust-lang","repo":"rust"}],"state":"OPEN","file_name":"2091-inline-semantic.md"},{"number":"2093","short_title":"infer-outlives","issues":[{"number":44493,"title":"Tracking issue for RFC 2093: Infer `T: 'x` outlives requirements on structs ","state":"OPEN","url":"https://github.com/rust-lang/rust/issues/44493","owner":"rust-lang","repo":"rust"}],"state":"OPEN","file_name":"2093-infer-outlives.md"},{"number":"2102","short_title":"unnamed-fields","issues":[{"number":49804,"title":"Tracking issue for RFC 2102, \"Unnamed fields of struct and union type\"","state":"OPEN","url":"https://github.com/rust-lang/rust/issues/49804","owner":"rust-lang","repo":"rust"}],"state":"OPEN","file_name":"2102-unnamed-fields.md"},{"number":"2103","short_title":"tool-attributes","issues":[{"number":44690,"title":"Tracking issue: RFC 2103 - attributes for tools","state":"OPEN","url":"https://github.com/rust-lang/rust/issues/44690","owner":"rust-lang","repo":"rust"}],"state":"OPEN","file_name":"2103-tool-attributes.md"},{"number":"2113","short_title":"dyn-trait-syntax","issues":[{"number":44662,"title":"Tracking issue for RFC 2113: `dyn Trait` Syntax for Trait Objects: Take 2 ","state":"OPEN","url":"https://github.com/rust-lang/rust/issues/44662","owner":"rust-lang","repo":"rust"}],"state":"OPEN","file_name":"2113-dyn-trait-syntax.md"},{"number":"2115","short_title":"argument-lifetimes","issues":[{"number":44524,"title":"Tracking issue for RFC 2115: In-band lifetime bindings","state":"OPEN","url":"https://github.com/rust-lang/rust/issues/44524","owner":"rust-lang","repo":"rust"}],"state":"OPEN","file_name":"2115-argument-lifetimes.md"},{"number":"2116","short_title":"alloc-me-maybe","issues":[{"number":48043,"title":"Tracking issue for RFC #2116: fallible collection allocation","state":"OPEN","url":"https://github.com/rust-lang/rust/issues/48043","owner":"rust-lang","repo":"rust"}],"state":"OPEN","file_name":"2116-alloc-me-maybe.md"},{"number":"2137","short_title":"variadic","issues":[{"number":44930,"title":"Tracking issue for RFC 2137: Support defining C-compatible variadic functions in Rust ","state":"OPEN","url":"https://github.com/rust-lang/rust/issues/44930","owner":"rust-lang","repo":"rust"}],"state":"OPEN","file_name":"2137-variadic.md"},{"number":"2141","short_title":"alternative-registries","issues":[{"number":44931,"title":"Tracking issue for RFC 2141: Add support to Cargo for alternative registries","state":"OPEN","url":"https://github.com/rust-lang/rust/issues/44931","owner":"rust-lang","repo":"rust"}],"state":"OPEN","file_name":"2141-alternative-registries.md"},{"number":"2145","short_title":"type-privacy","issues":[{"number":48054,"title":"Tracking issue for RFC #2145: Type privacy and private-in-public lints ","state":"OPEN","url":"https://github.com/rust-lang/rust/issues/48054","owner":"rust-lang","repo":"rust"}],"state":"OPEN","file_name":"2145-type-privacy.md"},{"number":"2166","short_title":"impl-only-use","issues":[{"number":48216,"title":"Tracking issue for RFC #2166: impl-only-use ","state":"OPEN","url":"https://github.com/rust-lang/rust/issues/48216","owner":"rust-lang","repo":"rust"}],"state":"OPEN","file_name":"2166-impl-only-use.md"},{"number":"2169","short_title":"euclidean-modulo","issues":[{"number":49048,"title":"Tracking issue for RFC 2169: Euclidean Modulo","state":"OPEN","url":"https://github.com/rust-lang/rust/issues/49048","owner":"rust-lang","repo":"rust"}],"state":"OPEN","file_name":"2169-euclidean-modulo.md"},{"number":"2175","short_title":"if-while-or-patterns","issues":[{"number":48215,"title":"Tracking issue for RFC #2175: or-patterns in if / while let expressions ","state":"OPEN","url":"https://github.com/rust-lang/rust/issues/48215","owner":"rust-lang","repo":"rust"}],"state":"OPEN","file_name":"2175-if-while-or-patterns.md"},{"number":"2196","short_title":"metabuild","issues":[{"number":49803,"title":"Tracking issue for RFC 2196, \"metabuild: semantic build scripts for Cargo\"","state":"OPEN","url":"https://github.com/rust-lang/rust/issues/49803","owner":"rust-lang","repo":"rust"}],"state":"OPEN","file_name":"2196-metabuild.md"},{"number":"2203","short_title":"const-repeat-expr","issues":[{"number":49147,"title":"Tracking issue for RFC 2203, \"Constants in array repeat expressions\"","state":"OPEN","url":"https://github.com/rust-lang/rust/issues/49147","owner":"rust-lang","repo":"rust"}],"state":"OPEN","file_name":"2203-const-repeat-expr.md"},{"number":"2229","short_title":"capture-disjoint-fields","issues":[{"number":53488,"title":"Tracking issue for RFC 2229, \"Closures Capture Disjoint Fields\"","state":"OPEN","url":"https://github.com/rust-lang/rust/issues/53488","owner":"rust-lang","repo":"rust"}],"state":"OPEN","file_name":"2229-capture-disjoint-fields.md"},{"number":"2250","short_title":"finalize-impl-dyn-syntax","issues":[{"number":34511,"title":"Tracking issue for `impl Trait` (RFC 1522, RFC 1951, RFC 2071)","state":"OPEN","url":"https://github.com/rust-lang/rust/issues/34511","owner":"rust-lang","repo":"rust"}],"state":"OPEN","file_name":"2250-finalize-impl-dyn-syntax.md"},{"number":"2282","short_title":"profile-dependencies","issues":[{"number":48683,"title":"Tracking issue for RFC 2282 - Cargo profile dependencies","state":"OPEN","url":"https://github.com/rust-lang/rust/issues/48683","owner":"rust-lang","repo":"rust"}],"state":"OPEN","file_name":"2282-profile-dependencies.md"},{"number":"2289","short_title":"associated-type-bounds","issues":[{"number":52662,"title":"Tracking issue for RFC 2289, \"Associated type bounds\"","state":"OPEN","url":"https://github.com/rust-lang/rust/issues/52662","owner":"rust-lang","repo":"rust"}],"state":"OPEN","file_name":"2289-associated-type-bounds.md"},{"number":"2294","short_title":"if-let-guard","issues":[{"number":51114,"title":"Tracking issue for RFC 2294, \"if let guard\"","state":"OPEN","url":"https://github.com/rust-lang/rust/issues/51114","owner":"rust-lang","repo":"rust"}],"state":"OPEN","file_name":"2294-if-let-guard.md"},{"number":"2295","short_title":"os-str-pattern","issues":[{"number":49802,"title":"Tracking issue for  RFC 2295, \"Extend Pattern API to OsStr\"","state":"OPEN","url":"https://github.com/rust-lang/rust/issues/49802","owner":"rust-lang","repo":"rust"}],"state":"OPEN","file_name":"2295-os-str-pattern.md"},{"number":"2296","short_title":"option-replace","issues":[{"number":51998,"title":"Tracking issue for RFC 2296, `Option::replace`","state":"OPEN","url":"https://github.com/rust-lang/rust/issues/51998","owner":"rust-lang","repo":"rust"}],"state":"OPEN","file_name":"2296-option-replace.md"},{"number":"2298","short_title":"macro-at-most-once-rep","issues":[{"number":48075,"title":"tracking issue for `?` macro repetition","state":"OPEN","url":"https://github.com/rust-lang/rust/issues/48075","owner":"rust-lang","repo":"rust"}],"state":"OPEN","file_name":"2298-macro-at-most-once-rep.md"},{"number":"2300","short_title":"self-in-typedefs","issues":[{"number":49303,"title":"Tracking issue for RFC 2300, \"`Self` in type definitions\"","state":"OPEN","url":"https://github.com/rust-lang/rust/issues/49303","owner":"rust-lang","repo":"rust"}],"state":"OPEN","file_name":"2300-self-in-typedefs.md"},{"number":"2302","short_title":"tuple-struct-self-ctor","issues":[{"number":51994,"title":"Tracking issue for RFC 2302, Tuple struct construction with `Self(v1, v2, ..)`","state":"OPEN","url":"https://github.com/rust-lang/rust/issues/51994","owner":"rust-lang","repo":"rust"}],"state":"OPEN","file_name":"2302-tuple-struct-self-ctor.md"},{"number":"2306","short_title":"convert-id","issues":[{"number":53500,"title":"Tracking issue for RFC 2306, \"Add core::convert::identity\"","state":"OPEN","url":"https://github.com/rust-lang/rust/issues/53500","owner":"rust-lang","repo":"rust"}],"state":"OPEN","file_name":"2306-convert-id.md"},{"number":"2318","short_title":"custom-test-frameworks","issues":[{"number":50297,"title":"Tracking issue for eRFC 2318, Custom test frameworks","state":"OPEN","url":"https://github.com/rust-lang/rust/issues/50297","owner":"rust-lang","repo":"rust"}],"state":"OPEN","file_name":"2318-custom-test-frameworks.md"},{"number":"2338","short_title":"type-alias-enum-variants","issues":[{"number":49683,"title":"Tracking issue for RFC 2338, \"Type alias enum variants\"","state":"OPEN","url":"https://github.com/rust-lang/rust/issues/49683","owner":"rust-lang","repo":"rust"}],"state":"OPEN","file_name":"2338-type-alias-enum-variants.md"},{"number":"2341","short_title":"const-locals","issues":[{"number":48821,"title":"Tracking issue for RFC 2341, Allow locals and destructuring in const fn","state":"OPEN","url":"https://github.com/rust-lang/rust/issues/48821","owner":"rust-lang","repo":"rust"}],"state":"OPEN","file_name":"2341-const-locals.md"},{"number":"2342","short_title":"const-control-flow","issues":[{"number":49146,"title":"Tracking issue for RFC 2342, \"Allow `if` and `match` in constants\"","state":"OPEN","url":"https://github.com/rust-lang/rust/issues/49146","owner":"rust-lang","repo":"rust"}],"state":"OPEN","file_name":"2342-const-control-flow.md"},{"number":"2344","short_title":"const-looping","issues":[{"number":52000,"title":"Tracking issue for RFC 2344, \"Allow `loop` in constant evaluation\"","state":"OPEN","url":"https://github.com/rust-lang/rust/issues/52000","owner":"rust-lang","repo":"rust"}],"state":"OPEN","file_name":"2344-const-looping.md"},{"number":"2345","short_title":"const-panic","issues":[{"number":51999,"title":"Tracking issue for RFC 2345, \"Allow panicking in constants\"","state":"OPEN","url":"https://github.com/rust-lang/rust/issues/51999","owner":"rust-lang","repo":"rust"}],"state":"OPEN","file_name":"2345-const-panic.md"},{"number":"2349","short_title":"pin","issues":[{"number":49150,"title":"Tracking issue for Pin APIs (RFC 2349)","state":"OPEN","url":"https://github.com/rust-lang/rust/issues/49150","owner":"rust-lang","repo":"rust"}],"state":"OPEN","file_name":"2349-pin.md"},{"number":"2351","short_title":"is-sorted","issues":[{"number":53485,"title":"Tracking issue for RFC 2351, \"Add `is_sorted` to the standard library\"","state":"OPEN","url":"https://github.com/rust-lang/rust/issues/53485","owner":"rust-lang","repo":"rust"}],"state":"OPEN","file_name":"2351-is-sorted.md"},{"number":"2386","short_title":"used","issues":[{"number":40289,"title":"Tracking issue for the `#[used]` attribute","state":"OPEN","url":"https://github.com/rust-lang/rust/issues/40289","owner":"rust-lang","repo":"rust"}],"state":"OPEN","file_name":"2386-used.md"},{"number":"2388","short_title":"try-expr","issues":[{"number":50412,"title":"Tracking issue for RFC 2388, reserve the `try` keyword and resolve `do catch { .. }` syntax question with `try { .. }`","state":"OPEN","url":"https://github.com/rust-lang/rust/issues/50412","owner":"rust-lang","repo":"rust"}],"state":"OPEN","file_name":"2388-try-expr.md"},{"number":"2394","short_title":"async_await","issues":[{"number":50547,"title":"Tracking issue for async/await (RFC 2394)","state":"OPEN","url":"https://github.com/rust-lang/rust/issues/50547","owner":"rust-lang","repo":"rust"}],"state":"OPEN","file_name":"2394-async_await.md"},{"number":"2397","short_title":"do-not-recommend","issues":[{"number":51992,"title":"Tracking issue for RFC 2397, \"#[do_not_recommend]\"","state":"OPEN","url":"https://github.com/rust-lang/rust/issues/51992","owner":"rust-lang","repo":"rust"}],"state":"OPEN","file_name":"2397-do-not-recommend.md"},{"number":"2497","short_title":"if-let-chains","issues":[{"number":53667,"title":"Tracking issue for eRFC 2497, \"if- and while-let-chains, take 2\"","state":"OPEN","url":"https://github.com/rust-lang/rust/issues/53667","owner":"rust-lang","repo":"rust"},{"number":53668,"title":"Tracking issue for eRFC 2497, \"if- and while-let-chains, take 2\", edition changes","state":"OPEN","url":"https://github.com/rust-lang/rust/issues/53668","owner":"rust-lang","repo":"rust"}],"state":"OPEN","file_name":"2497-if-let-chains.md"},{"number":"2504","short_title":"fix-error","issues":[{"number":53487,"title":"Tracking issue for RFC 2504, \"Fix the Error trait\"","state":"OPEN","url":"https://github.com/rust-lang/rust/issues/53487","owner":"rust-lang","repo":"rust"}],"state":"OPEN","file_name":"2504-fix-error.md"}],"unknown_rfcs":[{"number":"0002","short_title":"rfc-process","issues":[],"state":"CLOSED","file_name":"0002-rfc-process.md"},{"number":"0008","short_title":"new-intrinsics","issues":[],"state":"CLOSED","file_name":"0008-new-intrinsics.md"},{"number":"0505","short_title":"api-comment-conventions","issues":[],"state":"CLOSED","file_name":"0505-api-comment-conventions.md"},{"number":"0531","short_title":"define-rfc-scope","issues":[],"state":"CLOSED","file_name":"0531-define-rfc-scope.md"},{"number":"1011","short_title":"process.exit","issues":[],"state":"CLOSED","file_name":"1011-process.exit.md"},{"number":"1068","short_title":"rust-governance","issues":[],"state":"CLOSED","file_name":"1068-rust-governance.md"},{"number":"1105","short_title":"api-evolution","issues":[],"state":"CLOSED","file_name":"1105-api-evolution.md"},{"number":"1122","short_title":"language-semver","issues":[],"state":"CLOSED","file_name":"1122-language-semver.md"},{"number":"1191","short_title":"hir","issues":[],"state":"CLOSED","file_name":"1191-hir.md"},{"number":"1200","short_title":"cargo-install","issues":[],"state":"CLOSED","file_name":"1200-cargo-install.md"},{"number":"1242","short_title":"rust-lang-crates","issues":[],"state":"CLOSED","file_name":"1242-rust-lang-crates.md"},{"number":"1291","short_title":"promote-libc","issues":[],"state":"CLOSED","file_name":"1291-promote-libc.md"},{"number":"1298","short_title":"incremental-compilation","issues":[],"state":"CLOSED","file_name":"1298-incremental-compilation.md"},{"number":"1300","short_title":"intrinsic-semantics","issues":[],"state":"CLOSED","file_name":"1300-intrinsic-semantics.md"},{"number":"1361","short_title":"cargo-cfg-dependencies","issues":[],"state":"CLOSED","file_name":"1361-cargo-cfg-dependencies.md"},{"number":"1558","short_title":"closure-to-fn-coercion","issues":[],"state":"CLOSED","file_name":"1558-closure-to-fn-coercion.md"},{"number":"1567","short_title":"long-error-codes-explanation-normalization","issues":[],"state":"CLOSED","file_name":"1567-long-error-codes-explanation-normalization.md"},{"number":"1574","short_title":"more-api-documentation-conventions","issues":[],"state":"CLOSED","file_name":"1574-more-api-documentation-conventions.md"},{"number":"1589","short_title":"rustc-bug-fix-procedure","issues":[],"state":"CLOSED","file_name":"1589-rustc-bug-fix-procedure.md"},{"number":"1607","short_title":"style-rfcs","issues":[],"state":"CLOSED","file_name":"1607-style-rfcs.md"},{"number":"1620","short_title":"regex-1.0","issues":[],"state":"CLOSED","file_name":"1620-regex-1.0.md"},{"number":"1643","short_title":"memory-model-strike-team","issues":[],"state":"CLOSED","file_name":"1643-memory-model-strike-team.md"},{"number":"1683","short_title":"docs-team","issues":[],"state":"CLOSED","file_name":"1683-docs-team.md"},{"number":"1728","short_title":"north-star","issues":[],"state":"CLOSED","file_name":"1728-north-star.md"},{"number":"1774","short_title":"roadmap-2017","issues":[],"state":"CLOSED","file_name":"1774-roadmap-2017.md"},{"number":"1969","short_title":"cargo-prepublish","issues":[],"state":"CLOSED","file_name":"1969-cargo-prepublish.md"},{"number":"1983","short_title":"nursery-deprecation","issues":[],"state":"CLOSED","file_name":"1983-nursery-deprecation.md"},{"number":"2071","short_title":"impl-trait-type-alias","issues":[],"state":"CLOSED","file_name":"2071-impl-trait-type-alias.md"},{"number":"2136","short_title":"build-systems","issues":[],"state":"CLOSED","file_name":"2136-build-systems.md"},{"number":"2195","short_title":"really-tagged-unions","issues":[],"state":"CLOSED","file_name":"2195-really-tagged-unions.md"},{"number":"2230","short_title":"bury-description","issues":[],"state":"CLOSED","file_name":"2230-bury-description.md"},{"number":"2314","short_title":"roadmap-2018","issues":[],"state":"CLOSED","file_name":"2314-roadmap-2018.md"},{"number":"2333","short_title":"prior-art","issues":[],"state":"CLOSED","file_name":"2333-prior-art.md"},{"number":"2420","short_title":"unreserve-proc","issues":[],"state":"CLOSED","file_name":"2420-unreserve-proc.md"}],"closed_rfcs":[{"number":"0001","short_title":"private-fields","issues":[{"number":8122,"title":"Removing `priv` as a keyword","state":"CLOSED","url":"https://github.com/rust-lang/rust/issues/8122","owner":"rust-lang","repo":"rust"}],"state":"CLOSED","file_name":"0001-private-fields.md"},{"number":"0003","short_title":"attribute-usage","issues":[{"number":14373,"title":"Implement RFC#2: Unused attribute lint","state":"MERGED","url":"https://github.com/rust-lang/rust/pull/14373","owner":"rust-lang","repo":"rust"}],"state":"CLOSED","file_name":"0003-attribute-usage.md"},{"number":"0026","short_title":"remove-priv","issues":[{"number":13535,"title":"Remove priv keyword","state":"CLOSED","url":"https://github.com/rust-lang/rust/issues/13535","owner":"rust-lang","repo":"rust"}],"state":"CLOSED","file_name":"0026-remove-priv.md"},{"number":"0034","short_title":"bounded-type-parameters","issues":[{"number":15759,"title":"Tracking RFC 11 - bounded struct typarams","state":"CLOSED","url":"https://github.com/rust-lang/rust/issues/15759","owner":"rust-lang","repo":"rust"}],"state":"CLOSED","file_name":"0034-bounded-type-parameters.md"},{"number":"0040","short_title":"libstd-facade","issues":[{"number":13851,"title":"Make std a facade","state":"CLOSED","url":"https://github.com/rust-lang/rust/issues/13851","owner":"rust-lang","repo":"rust"}],"state":"CLOSED","file_name":"0040-libstd-facade.md"},{"number":"0042","short_title":"regexps","issues":[{"number":13700,"title":"add regexp crate to Rust distribution (implements RFC 7)","state":"MERGED","url":"https://github.com/rust-lang/rust/pull/13700","owner":"rust-lang","repo":"rust"}],"state":"CLOSED","file_name":"0042-regexps.md"},{"number":"0048","short_title":"traits","issues":[{"number":5527,"title":"Trait reform","state":"CLOSED","url":"https://github.com/rust-lang/rust/issues/5527","owner":"rust-lang","repo":"rust"}],"state":"CLOSED","file_name":"0048-traits.md"},{"number":"0049","short_title":"match-arm-attributes","issues":[{"number":12812,"title":"Allow attributes on match arms","state":"MERGED","url":"https://github.com/rust-lang/rust/pull/12812","owner":"rust-lang","repo":"rust"}],"state":"CLOSED","file_name":"0049-match-arm-attributes.md"},{"number":"0050","short_title":"assert","issues":[{"number":13789,"title":"Add debug_assert and debug_assert_eq macros","state":"MERGED","url":"https://github.com/rust-lang/rust/pull/13789","owner":"rust-lang","repo":"rust"}],"state":"CLOSED","file_name":"0050-assert.md"},{"number":"0059","short_title":"remove-tilde","issues":[{"number":13885,"title":"Remove ~, add Box","state":"CLOSED","url":"https://github.com/rust-lang/rust/issues/13885","owner":"rust-lang","repo":"rust"}],"state":"CLOSED","file_name":"0059-remove-tilde.md"},{"number":"0060","short_title":"rename-strbuf","issues":[{"number":14312,"title":"Rename StrBuf to String","state":"CLOSED","url":"https://github.com/rust-lang/rust/issues/14312","owner":"rust-lang","repo":"rust"}],"state":"CLOSED","file_name":"0060-rename-strbuf.md"},{"number":"0063","short_title":"module-file-system-hierarchy","issues":[{"number":14180,"title":"Enforce the file system hierarchy more strictly for modules","state":"CLOSED","url":"https://github.com/rust-lang/rust/issues/14180","owner":"rust-lang","repo":"rust"}],"state":"CLOSED","file_name":"0063-module-file-system-hierarchy.md"},{"number":"0068","short_title":"const-unsafe-pointers","issues":[{"number":7362,"title":"Clarify story on *T (unsafe pointers)","state":"CLOSED","url":"https://github.com/rust-lang/rust/issues/7362","owner":"rust-lang","repo":"rust"}],"state":"CLOSED","file_name":"0068-const-unsafe-pointers.md"},{"number":"0069","short_title":"ascii-literals","issues":[{"number":14646,"title":"Tracking issue for RFC 23 - byte string literals","state":"CLOSED","url":"https://github.com/rust-lang/rust/issues/14646","owner":"rust-lang","repo":"rust"}],"state":"CLOSED","file_name":"0069-ascii-literals.md"},{"number":"0071","short_title":"const-block-expr","issues":[{"number":14181,"title":"Allow blocks in statics","state":"CLOSED","url":"https://github.com/rust-lang/rust/issues/14181","owner":"rust-lang","repo":"rust"}],"state":"CLOSED","file_name":"0071-const-block-expr.md"},{"number":"0079","short_title":"undefined-struct-layout","issues":[{"number":14309,"title":"Tracking bug for RFC 18 - undefined struct layout","state":"CLOSED","url":"https://github.com/rust-lang/rust/issues/14309","owner":"rust-lang","repo":"rust"}],"state":"CLOSED","file_name":"0079-undefined-struct-layout.md"},{"number":"0085","short_title":"pattern-macros","issues":[{"number":14473,"title":"Tracking issue for RFC 20 - pattern macros","state":"CLOSED","url":"https://github.com/rust-lang/rust/issues/14473","owner":"rust-lang","repo":"rust"}],"state":"CLOSED","file_name":"0085-pattern-macros.md"},{"number":"0086","short_title":"plugin-registrar","issues":[{"number":14637,"title":"Implement #[plugin_registrar]","state":"CLOSED","url":"https://github.com/rust-lang/rust/issues/14637","owner":"rust-lang","repo":"rust"}],"state":"CLOSED","file_name":"0086-plugin-registrar.md"},{"number":"0087","short_title":"trait-bounds-with-plus","issues":[{"number":12778,"title":"Parser ambiguity with trait bounds and closure arguments","state":"CLOSED","url":"https://github.com/rust-lang/rust/issues/12778","owner":"rust-lang","repo":"rust"}],"state":"CLOSED","file_name":"0087-trait-bounds-with-plus.md"},{"number":"0089","short_title":"loadable-lints","issues":[{"number":14067,"title":"Loadable lints","state":"CLOSED","url":"https://github.com/rust-lang/rust/issues/14067","owner":"rust-lang","repo":"rust"}],"state":"CLOSED","file_name":"0089-loadable-lints.md"},{"number":"0090","short_title":"lexical-syntax-simplification","issues":[{"number":14504,"title":"Tracking issue for RFC 21 - lexical syntax simplification","state":"CLOSED","url":"https://github.com/rust-lang/rust/issues/14504","owner":"rust-lang","repo":"rust"}],"state":"CLOSED","file_name":"0090-lexical-syntax-simplification.md"},{"number":"0092","short_title":"struct-grammar","issues":[{"number":14803,"title":"Tracking issue for disallowing struct literals in ambiguous positions","state":"CLOSED","url":"https://github.com/rust-lang/rust/issues/14803","owner":"rust-lang","repo":"rust"}],"state":"CLOSED","file_name":"0092-struct-grammar.md"},{"number":"0093","short_title":"remove-format-intl","issues":[{"number":14812,"title":"Remove fmt! i18n (RFC 26)","state":"CLOSED","url":"https://github.com/rust-lang/rust/issues/14812","owner":"rust-lang","repo":"rust"}],"state":"CLOSED","file_name":"0093-remove-format-intl.md"},{"number":"0100","short_title":"partial-cmp","issues":[{"number":14987,"title":"Tracking issue for adding partial_cmp to PartialOrd","state":"CLOSED","url":"https://github.com/rust-lang/rust/issues/14987","owner":"rust-lang","repo":"rust"}],"state":"CLOSED","file_name":"0100-partial-cmp.md"},{"number":"0109","short_title":"remove-crate-id","issues":[{"number":14470,"title":"Eliminate crate_id's","state":"CLOSED","url":"https://github.com/rust-lang/rust/issues/14470","owner":"rust-lang","repo":"rust"}],"state":"CLOSED","file_name":"0109-remove-crate-id.md"},{"number":"0111","short_title":"index-traits","issues":[{"number":6515,"title":"split Index into Index, IndexMut and IndexAssign","state":"CLOSED","url":"https://github.com/rust-lang/rust/issues/6515","owner":"rust-lang","repo":"rust"}],"state":"CLOSED","file_name":"0111-index-traits.md"},{"number":"0112","short_title":"remove-cross-borrowing","issues":[{"number":10504,"title":"Improve symmetry when calling a function with a borrowed parameter","state":"CLOSED","url":"https://github.com/rust-lang/rust/issues/10504","owner":"rust-lang","repo":"rust"}],"state":"CLOSED","file_name":"0112-remove-cross-borrowing.md"},{"number":"0114","short_title":"closures","issues":[{"number":16095,"title":"Implement unboxed closures","state":"CLOSED","url":"https://github.com/rust-lang/rust/issues/16095","owner":"rust-lang","repo":"rust"}],"state":"CLOSED","file_name":"0114-closures.md"},{"number":"0115","short_title":"rm-integer-fallback","issues":[{"number":6023,"title":"consider removing the fallback to int for integer inference","state":"CLOSED","url":"https://github.com/rust-lang/rust/issues/6023","owner":"rust-lang","repo":"rust"}],"state":"CLOSED","file_name":"0115-rm-integer-fallback.md"},{"number":"0116","short_title":"no-module-shadowing","issues":[{"number":16464,"title":"Feature gate import shadowing","state":"CLOSED","url":"https://github.com/rust-lang/rust/issues/16464","owner":"rust-lang","repo":"rust"}],"state":"CLOSED","file_name":"0116-no-module-shadowing.md"},{"number":"0123","short_title":"share-to-threadsafe","issues":[{"number":16281,"title":"Rename Share to Sync [Tracking issue for RFC 45]","state":"CLOSED","url":"https://github.com/rust-lang/rust/issues/16281","owner":"rust-lang","repo":"rust"}],"state":"CLOSED","file_name":"0123-share-to-threadsafe.md"},{"number":"0130","short_title":"box-not-special","issues":[{"number":16094,"title":"Remove special borrowck treatment of Box","state":"CLOSED","url":"https://github.com/rust-lang/rust/issues/16094","owner":"rust-lang","repo":"rust"}],"state":"CLOSED","file_name":"0130-box-not-special.md"},{"number":"0131","short_title":"target-specification","issues":[{"number":16093,"title":"Implement flexible target specs","state":"CLOSED","url":"https://github.com/rust-lang/rust/issues/16093","owner":"rust-lang","repo":"rust"}],"state":"CLOSED","file_name":"0131-target-specification.md"},{"number":"0132","short_title":"ufcs","issues":[{"number":16293,"title":"Implement UFCS (Tracking RFC 132)","state":"CLOSED","url":"https://github.com/rust-lang/rust/issues/16293","owner":"rust-lang","repo":"rust"}],"state":"CLOSED","file_name":"0132-ufcs.md"},{"number":"0136","short_title":"no-privates-in-public","issues":[{"number":16463,"title":"Feature gate public items in private APIs","state":"CLOSED","url":"https://github.com/rust-lang/rust/issues/16463","owner":"rust-lang","repo":"rust"}],"state":"CLOSED","file_name":"0136-no-privates-in-public.md"},{"number":"0139","short_title":"remove-cross-borrowing-entirely","issues":[{"number":10504,"title":"Improve symmetry when calling a function with a borrowed parameter","state":"CLOSED","url":"https://github.com/rust-lang/rust/issues/10504","owner":"rust-lang","repo":"rust"}],"state":"CLOSED","file_name":"0139-remove-cross-borrowing-entirely.md"},{"number":"0141","short_title":"lifetime-elision","issues":[{"number":15552,"title":"Implement lifetime elision","state":"CLOSED","url":"https://github.com/rust-lang/rust/issues/15552","owner":"rust-lang","repo":"rust"}],"state":"CLOSED","file_name":"0141-lifetime-elision.md"},{"number":"0151","short_title":"capture-by-value","issues":[{"number":12831,"title":"by-ref closure capture semantics are a backwards compatibility hazard","state":"CLOSED","url":"https://github.com/rust-lang/rust/issues/12831","owner":"rust-lang","repo":"rust"}],"state":"CLOSED","file_name":"0151-capture-by-value.md"},{"number":"0155","short_title":"anonymous-impl-only-in-same-module","issues":[{"number":17059,"title":"Require inherent impls to be located adjacent to their types","state":"CLOSED","url":"https://github.com/rust-lang/rust/issues/17059","owner":"rust-lang","repo":"rust"}],"state":"CLOSED","file_name":"0155-anonymous-impl-only-in-same-module.md"},{"number":"0160","short_title":"if-let","issues":[{"number":16779,"title":"Implement if-let","state":"CLOSED","url":"https://github.com/rust-lang/rust/issues/16779","owner":"rust-lang","repo":"rust"}],"state":"CLOSED","file_name":"0160-if-let.md"},{"number":"0164","short_title":"feature-gate-slice-pats","issues":[{"number":16951,"title":"Feature gate some slice pattern features","state":"CLOSED","url":"https://github.com/rust-lang/rust/issues/16951","owner":"rust-lang","repo":"rust"}],"state":"CLOSED","file_name":"0164-feature-gate-slice-pats.md"},{"number":"0168","short_title":"mod","issues":[{"number":15722,"title":"Implement new module import sugar","state":"CLOSED","url":"https://github.com/rust-lang/rust/issues/15722","owner":"rust-lang","repo":"rust"}],"state":"CLOSED","file_name":"0168-mod.md"},{"number":"0169","short_title":"use-path-as-id","issues":[{"number":16461,"title":" Replace `use id = path;` with `use path as id;`","state":"CLOSED","url":"https://github.com/rust-lang/rust/issues/16461","owner":"rust-lang","repo":"rust"}],"state":"CLOSED","file_name":"0169-use-path-as-id.md"},{"number":"0179","short_title":"and-mut-patterns","issues":[{"number":20496,"title":"Implement new &mut pattern syntax","state":"CLOSED","url":"https://github.com/rust-lang/rust/issues/20496","owner":"rust-lang","repo":"rust"}],"state":"CLOSED","file_name":"0179-and-mut-patterns.md"},{"number":"0184","short_title":"tuple-accessors","issues":[{"number":16950,"title":"Implement tuple indexing","state":"CLOSED","url":"https://github.com/rust-lang/rust/issues/16950","owner":"rust-lang","repo":"rust"}],"state":"CLOSED","file_name":"0184-tuple-accessors.md"},{"number":"0192","short_title":"bounds-on-object-and-generic-types","issues":[{"number":16462,"title":"Implement generalized object and type parameter bounds","state":"CLOSED","url":"https://github.com/rust-lang/rust/issues/16462","owner":"rust-lang","repo":"rust"}],"state":"CLOSED","file_name":"0192-bounds-on-object-and-generic-types.md"},{"number":"0194","short_title":"cfg-syntax","issues":[{"number":17490,"title":"Overhaul the `#[cfg(..)]` pattern syntax","state":"CLOSED","url":"https://github.com/rust-lang/rust/issues/17490","owner":"rust-lang","repo":"rust"}],"state":"CLOSED","file_name":"0194-cfg-syntax.md"},{"number":"0195","short_title":"associated-items","issues":[{"number":17307,"title":"Implement associated items","state":"CLOSED","url":"https://github.com/rust-lang/rust/issues/17307","owner":"rust-lang","repo":"rust"}],"state":"CLOSED","file_name":"0195-associated-items.md"},{"number":"0198","short_title":"slice-notation","issues":[{"number":17177,"title":"Implement overloaded slice notation","state":"CLOSED","url":"https://github.com/rust-lang/rust/issues/17177","owner":"rust-lang","repo":"rust"}],"state":"CLOSED","file_name":"0198-slice-notation.md"},{"number":"0199","short_title":"ownership-variants","issues":[{"number":16810,"title":"Implement conventions for ownership variants","state":"CLOSED","url":"https://github.com/rust-lang/rust/issues/16810","owner":"rust-lang","repo":"rust"}],"state":"CLOSED","file_name":"0199-ownership-variants.md"},{"number":"0201","short_title":"error-chaining","issues":[{"number":17747,"title":"Implement error interoperation","state":"CLOSED","url":"https://github.com/rust-lang/rust/issues/17747","owner":"rust-lang","repo":"rust"}],"state":"CLOSED","file_name":"0201-error-chaining.md"},{"number":"0202","short_title":"subslice-syntax-change","issues":[{"number":16967,"title":"Futureproof subslice syntax","state":"CLOSED","url":"https://github.com/rust-lang/rust/issues/16967","owner":"rust-lang","repo":"rust"}],"state":"CLOSED","file_name":"0202-subslice-syntax-change.md"},{"number":"0212","short_title":"restore-int-fallback","issues":[{"number":16968,"title":"Restore int fallback","state":"CLOSED","url":"https://github.com/rust-lang/rust/issues/16968","owner":"rust-lang","repo":"rust"}],"state":"CLOSED","file_name":"0212-restore-int-fallback.md"},{"number":"0214","short_title":"while-let","issues":[{"number":17687,"title":"Tracking issue for `while let`","state":"CLOSED","url":"https://github.com/rust-lang/rust/issues/17687","owner":"rust-lang","repo":"rust"}],"state":"CLOSED","file_name":"0214-while-let.md"},{"number":"0216","short_title":"collection-views","issues":[{"number":17320,"title":"Implement \"entry\" API for maps","state":"CLOSED","url":"https://github.com/rust-lang/rust/issues/17320","owner":"rust-lang","repo":"rust"}],"state":"CLOSED","file_name":"0216-collection-views.md"},{"number":"0218","short_title":"empty-struct-with-braces","issues":[{"number":24266,"title":"Empty struct with braces tracking issue (RFC 218)","state":"CLOSED","url":"https://github.com/rust-lang/rust/issues/24266","owner":"rust-lang","repo":"rust"}],"state":"CLOSED","file_name":"0218-empty-struct-with-braces.md"},{"number":"0221","short_title":"panic","issues":[{"number":17489,"title":"Rename task failure to task panic","state":"CLOSED","url":"https://github.com/rust-lang/rust/issues/17489","owner":"rust-lang","repo":"rust"}],"state":"CLOSED","file_name":"0221-panic.md"},{"number":"0230","short_title":"remove-runtime","issues":[{"number":17325,"title":"Remove libgreen and runtime abstractions","state":"CLOSED","url":"https://github.com/rust-lang/rust/issues/17325","owner":"rust-lang","repo":"rust"}],"state":"CLOSED","file_name":"0230-remove-runtime.md"},{"number":"0231","short_title":"upvar-capture-inference","issues":[{"number":16640,"title":"Closure kind inference: infer whether a closure is `Fn`, `FnMut`, etc","state":"CLOSED","url":"https://github.com/rust-lang/rust/issues/16640","owner":"rust-lang","repo":"rust"}],"state":"CLOSED","file_name":"0231-upvar-capture-inference.md"},{"number":"0234","short_title":"variants-namespace","issues":[{"number":17323,"title":"Add variants to the type namespace","state":"CLOSED","url":"https://github.com/rust-lang/rust/issues/17323","owner":"rust-lang","repo":"rust"}],"state":"CLOSED","file_name":"0234-variants-namespace.md"},{"number":"0235","short_title":"collections-conventions","issues":[{"number":18424,"title":"Implement collections reform","state":"CLOSED","url":"https://github.com/rust-lang/rust/issues/18424","owner":"rust-lang","repo":"rust"}],"state":"CLOSED","file_name":"0235-collections-conventions.md"},{"number":"0236","short_title":"error-conventions","issues":[{"number":18466,"title":"Ensure libraries enforce correct error conventions","state":"CLOSED","url":"https://github.com/rust-lang/rust/issues/18466","owner":"rust-lang","repo":"rust"}],"state":"CLOSED","file_name":"0236-error-conventions.md"},{"number":"0240","short_title":"unsafe-api-location","issues":[{"number":17863,"title":"Tighten up conventions with unsafe apis","state":"CLOSED","url":"https://github.com/rust-lang/rust/issues/17863","owner":"rust-lang","repo":"rust"}],"state":"CLOSED","file_name":"0240-unsafe-api-location.md"},{"number":"0241","short_title":"deref-conversions","issues":[{"number":21432,"title":"Tracking issue for deref coercions RFC","state":"CLOSED","url":"https://github.com/rust-lang/rust/issues/21432","owner":"rust-lang","repo":"rust"}],"state":"CLOSED","file_name":"0241-deref-conversions.md"},{"number":"0246","short_title":"const-vs-static","issues":[{"number":17718,"title":"Implement global constants, alter the meaning of `static`","state":"CLOSED","url":"https://github.com/rust-lang/rust/issues/17718","owner":"rust-lang","repo":"rust"}],"state":"CLOSED","file_name":"0246-const-vs-static.md"},{"number":"0255","short_title":"object-safety","issues":[{"number":17670,"title":"Tracking issue for enforcing object safety when coercing to an object","state":"CLOSED","url":"https://github.com/rust-lang/rust/issues/17670","owner":"rust-lang","repo":"rust"}],"state":"CLOSED","file_name":"0255-object-safety.md"},{"number":"0256","short_title":"remove-refcounting-gc-of-t","issues":[{"number":256,"title":"remove ref-counting Gc<T>","state":"MERGED","url":"https://github.com/rust-lang/rfcs/pull/256","owner":"rust-lang","repo":"rfcs"}],"state":"CLOSED","file_name":"0256-remove-refcounting-gc-of-t.md"},{"number":"0320","short_title":"nonzeroing-dynamic-drop","issues":[{"number":5016,"title":"implement \"dynamic drop\" semantics using flags on the stack rather than zeroing","state":"CLOSED","url":"https://github.com/rust-lang/rust/issues/5016","owner":"rust-lang","repo":"rust"}],"state":"CLOSED","file_name":"0320-nonzeroing-dynamic-drop.md"},{"number":"0326","short_title":"restrict-xXX-to-ascii","issues":[{"number":18062,"title":"Restrict \"\\xXX\" to ASCII (0x00 -- 0x7F) ","state":"CLOSED","url":"https://github.com/rust-lang/rust/issues/18062","owner":"rust-lang","repo":"rust"}],"state":"CLOSED","file_name":"0326-restrict-xXX-to-ascii.md"},{"number":"0339","short_title":"statically-sized-literals","issues":[{"number":18465,"title":"Byte string literals should have a type of a fixed size","state":"CLOSED","url":"https://github.com/rust-lang/rust/issues/18465","owner":"rust-lang","repo":"rust"}],"state":"CLOSED","file_name":"0339-statically-sized-literals.md"},{"number":"0341","short_title":"remove-virtual-structs","issues":[{"number":17861,"title":"Remove virtual structs","state":"CLOSED","url":"https://github.com/rust-lang/rust/issues/17861","owner":"rust-lang","repo":"rust"}],"state":"CLOSED","file_name":"0341-remove-virtual-structs.md"},{"number":"0342","short_title":"keywords","issues":[{"number":17862,"title":"Reserve abstract, virtual, override keywords","state":"CLOSED","url":"https://github.com/rust-lang/rust/issues/17862","owner":"rust-lang","repo":"rust"}],"state":"CLOSED","file_name":"0342-keywords.md"},{"number":"0344","short_title":"conventions-galore","issues":[{"number":18074,"title":"Propagate recent RFC for naming conventions","state":"CLOSED","url":"https://github.com/rust-lang/rust/issues/18074","owner":"rust-lang","repo":"rust"}],"state":"CLOSED","file_name":"0344-conventions-galore.md"},{"number":"0356","short_title":"no-module-prefixes","issues":[{"number":18073,"title":"Remove module prefixes from type names","state":"CLOSED","url":"https://github.com/rust-lang/rust/issues/18073","owner":"rust-lang","repo":"rust"}],"state":"CLOSED","file_name":"0356-no-module-prefixes.md"},{"number":"0369","short_title":"num-reform","issues":[{"number":18640,"title":"Simplify numeric traits","state":"CLOSED","url":"https://github.com/rust-lang/rust/issues/18640","owner":"rust-lang","repo":"rust"}],"state":"CLOSED","file_name":"0369-num-reform.md"},{"number":"0378","short_title":"expr-macros","issues":[{"number":18635,"title":"Implement parse macro!() / macro![] as expr (RFC 378)","state":"CLOSED","url":"https://github.com/rust-lang/rust/issues/18635","owner":"rust-lang","repo":"rust"}],"state":"CLOSED","file_name":"0378-expr-macros.md"},{"number":"0379","short_title":"remove-reflection","issues":[{"number":18046,"title":"Remove reflection","state":"CLOSED","url":"https://github.com/rust-lang/rust/issues/18046","owner":"rust-lang","repo":"rust"}],"state":"CLOSED","file_name":"0379-remove-reflection.md"},{"number":"0380","short_title":"stabilize-std-fmt","issues":[{"number":18904,"title":"Stabilize parts of std::fmt","state":"CLOSED","url":"https://github.com/rust-lang/rust/issues/18904","owner":"rust-lang","repo":"rust"}],"state":"CLOSED","file_name":"0380-stabilize-std-fmt.md"},{"number":"0385","short_title":"module-system-cleanup","issues":[{"number":18219,"title":"Tracking issue for RFC PR 385 - module system cleanup","state":"CLOSED","url":"https://github.com/rust-lang/rust/issues/18219","owner":"rust-lang","repo":"rust"}],"state":"CLOSED","file_name":"0385-module-system-cleanup.md"},{"number":"0387","short_title":"higher-ranked-trait-bounds","issues":[{"number":18639,"title":"Implement higher-ranked trait bounds","state":"CLOSED","url":"https://github.com/rust-lang/rust/issues/18639","owner":"rust-lang","repo":"rust"}],"state":"CLOSED","file_name":"0387-higher-ranked-trait-bounds.md"},{"number":"0390","short_title":"enum-namespacing","issues":[{"number":18478,"title":"Implement namespaced enums","state":"CLOSED","url":"https://github.com/rust-lang/rust/issues/18478","owner":"rust-lang","repo":"rust"}],"state":"CLOSED","file_name":"0390-enum-namespacing.md"},{"number":"0403","short_title":"cargo-build-command","issues":[{"number":18473,"title":"Implement the -l flag for native linking","state":"CLOSED","url":"https://github.com/rust-lang/rust/issues/18473","owner":"rust-lang","repo":"rust"}],"state":"CLOSED","file_name":"0403-cargo-build-command.md"},{"number":"0404","short_title":"change-prefer-dynamic","issues":[{"number":18499,"title":"Tracking issue for RFC: Tweak the compiler's default linkage for dylibs","state":"CLOSED","url":"https://github.com/rust-lang/rust/issues/18499","owner":"rust-lang","repo":"rust"}],"state":"CLOSED","file_name":"0404-change-prefer-dynamic.md"},{"number":"0418","short_title":"struct-variants","issues":[{"number":18641,"title":"Un-feature-gate struct variants","state":"CLOSED","url":"https://github.com/rust-lang/rust/issues/18641","owner":"rust-lang","repo":"rust"}],"state":"CLOSED","file_name":"0418-struct-variants.md"},{"number":"0430","short_title":"finalizing-naming-conventions","issues":[{"number":19091,"title":"Tracking RFC 430 - conform to naming conventions","state":"CLOSED","url":"https://github.com/rust-lang/rust/issues/19091","owner":"rust-lang","repo":"rust"}],"state":"CLOSED","file_name":"0430-finalizing-naming-conventions.md"},{"number":"0438","short_title":"precedence-of-plus","issues":[{"number":19092,"title":"Tracking RFC 438 - precedence of + in type grammar","state":"CLOSED","url":"https://github.com/rust-lang/rust/issues/19092","owner":"rust-lang","repo":"rust"}],"state":"CLOSED","file_name":"0438-precedence-of-plus.md"},{"number":"0439","short_title":"cmp-ops-reform","issues":[{"number":19148,"title":"Implement cmp and ops reform","state":"CLOSED","url":"https://github.com/rust-lang/rust/issues/19148","owner":"rust-lang","repo":"rust"}],"state":"CLOSED","file_name":"0439-cmp-ops-reform.md"},{"number":"0445","short_title":"extension-trait-conventions","issues":[{"number":19324,"title":"Adhere to extension trait conventions","state":"CLOSED","url":"https://github.com/rust-lang/rust/issues/19324","owner":"rust-lang","repo":"rust"}],"state":"CLOSED","file_name":"0445-extension-trait-conventions.md"},{"number":"0446","short_title":"es6-unicode-escapes","issues":[{"number":19739,"title":"Tracking issue for RFC 446 - ES6-style unicode escapes","state":"CLOSED","url":"https://github.com/rust-lang/rust/issues/19739","owner":"rust-lang","repo":"rust"}],"state":"CLOSED","file_name":"0446-es6-unicode-escapes.md"},{"number":"0447","short_title":"no-unused-impl-parameters","issues":[{"number":20598,"title":"Tracking issue for Prohibit unused type parameters in impls (RFC 447)","state":"CLOSED","url":"https://github.com/rust-lang/rust/issues/20598","owner":"rust-lang","repo":"rust"}],"state":"CLOSED","file_name":"0447-no-unused-impl-parameters.md"},{"number":"0450","short_title":"un-feature-gate-some-more-gates","issues":[{"number":19469,"title":"Un-feature gate `if let`, `while let`, tuple indexing","state":"CLOSED","url":"https://github.com/rust-lang/rust/issues/19469","owner":"rust-lang","repo":"rust"}],"state":"CLOSED","file_name":"0450-un-feature-gate-some-more-gates.md"},{"number":"0453","short_title":"macro-reform","issues":[{"number":20008,"title":"Macro reform (Tracking issue for RFC 453)","state":"CLOSED","url":"https://github.com/rust-lang/rust/issues/20008","owner":"rust-lang","repo":"rust"}],"state":"CLOSED","file_name":"0453-macro-reform.md"},{"number":"0458","short_title":"send-improvements","issues":[{"number":22251,"title":"Tracking issue for Improve the Send trait (RFC 458)","state":"CLOSED","url":"https://github.com/rust-lang/rust/issues/22251","owner":"rust-lang","repo":"rust"}],"state":"CLOSED","file_name":"0458-send-improvements.md"},{"number":"0459","short_title":"disallow-shadowing","issues":[{"number":19390,"title":"Tracking issue for RFC 459 - Disallow type/lifetime parameter shadowing","state":"CLOSED","url":"https://github.com/rust-lang/rust/issues/19390","owner":"rust-lang","repo":"rust"}],"state":"CLOSED","file_name":"0459-disallow-shadowing.md"},{"number":"0461","short_title":"tls-overhaul","issues":[{"number":19175,"title":"Overhaul thread local storage","state":"CLOSED","url":"https://github.com/rust-lang/rust/issues/19175","owner":"rust-lang","repo":"rust"}],"state":"CLOSED","file_name":"0461-tls-overhaul.md"},{"number":"0463","short_title":"future-proof-literal-suffixes","issues":[{"number":19088,"title":"Tracking issue for RFC 463 - tokenise idents immediately after a literal as part of the literal","state":"CLOSED","url":"https://github.com/rust-lang/rust/issues/19088","owner":"rust-lang","repo":"rust"}],"state":"CLOSED","file_name":"0463-future-proof-literal-suffixes.md"},{"number":"0469","short_title":"feature-gate-box-patterns","issues":[{"number":21931,"title":"Tracking issue for feature-gate box patterns (RFC 469)","state":"CLOSED","url":"https://github.com/rust-lang/rust/issues/21931","owner":"rust-lang","repo":"rust"}],"state":"CLOSED","file_name":"0469-feature-gate-box-patterns.md"},{"number":"0474","short_title":"path-reform","issues":[{"number":20034,"title":"Implement path reform","state":"CLOSED","url":"https://github.com/rust-lang/rust/issues/20034","owner":"rust-lang","repo":"rust"}],"state":"CLOSED","file_name":"0474-path-reform.md"},{"number":"0486","short_title":"std-ascii-reform","issues":[{"number":19908,"title":"Tracking issue for `std::ascii` reform (RFC 486)","state":"CLOSED","url":"https://github.com/rust-lang/rust/issues/19908","owner":"rust-lang","repo":"rust"}],"state":"CLOSED","file_name":"0486-std-ascii-reform.md"},{"number":"0490","short_title":"dst-syntax","issues":[{"number":19607,"title":"Tracking issue for RFC 490 - DST syntax changes","state":"CLOSED","url":"https://github.com/rust-lang/rust/issues/19607","owner":"rust-lang","repo":"rust"}],"state":"CLOSED","file_name":"0490-dst-syntax.md"},{"number":"0494","short_title":"c_str-and-c_vec-stability","issues":[{"number":20444,"title":"Tracking issue for stabilize c_str, c_vec (RFC 494)","state":"CLOSED","url":"https://github.com/rust-lang/rust/issues/20444","owner":"rust-lang","repo":"rust"}],"state":"CLOSED","file_name":"0494-c_str-and-c_vec-stability.md"},{"number":"0503","short_title":"prelude-stabilization","issues":[{"number":20068,"title":"Tracking issue for prelude stabilization (RFC 503)","state":"CLOSED","url":"https://github.com/rust-lang/rust/issues/20068","owner":"rust-lang","repo":"rust"}],"state":"CLOSED","file_name":"0503-prelude-stabilization.md"},{"number":"0504","short_title":"show-stabilization","issues":[{"number":20013,"title":"Tracking issue for splitting Show into String and Show (RFC 504)","state":"CLOSED","url":"https://github.com/rust-lang/rust/issues/20013","owner":"rust-lang","repo":"rust"}],"state":"CLOSED","file_name":"0504-show-stabilization.md"},{"number":"0507","short_title":"release-channels","issues":[{"number":20445,"title":"Implement stability attribute overhaul","state":"CLOSED","url":"https://github.com/rust-lang/rust/issues/20445","owner":"rust-lang","repo":"rust"}],"state":"CLOSED","file_name":"0507-release-channels.md"},{"number":"0509","short_title":"collections-reform-part-2","issues":[{"number":19986,"title":"Tracking issue for collections reform part 2 (RFC 509)","state":"CLOSED","url":"https://github.com/rust-lang/rust/issues/19986","owner":"rust-lang","repo":"rust"}],"state":"CLOSED","file_name":"0509-collections-reform-part-2.md"},{"number":"0517","short_title":"io-os-reform","issues":[{"number":21070,"title":"Tracking issue for RFC 517: IO reform","state":"CLOSED","url":"https://github.com/rust-lang/rust/issues/21070","owner":"rust-lang","repo":"rust"}],"state":"CLOSED","file_name":"0517-io-os-reform.md"},{"number":"0520","short_title":"new-array-repeat-syntax","issues":[{"number":19999,"title":"Tracking issue for RFC 520: change fixed length array syntax","state":"CLOSED","url":"https://github.com/rust-lang/rust/issues/19999","owner":"rust-lang","repo":"rust"}],"state":"CLOSED","file_name":"0520-new-array-repeat-syntax.md"},{"number":"0522","short_title":"self-impl","issues":[{"number":20000,"title":"Tracking issue for RFC 522: allow `Self` type in impls","state":"CLOSED","url":"https://github.com/rust-lang/rust/issues/20000","owner":"rust-lang","repo":"rust"}],"state":"CLOSED","file_name":"0522-self-impl.md"},{"number":"0526","short_title":"fmt-text-writer","issues":[{"number":20352,"title":"Tracking issue for Unicode enforcement in `std::fmt` (RFC 526)","state":"CLOSED","url":"https://github.com/rust-lang/rust/issues/20352","owner":"rust-lang","repo":"rust"}],"state":"CLOSED","file_name":"0526-fmt-text-writer.md"},{"number":"0528","short_title":"string-patterns","issues":[{"number":22477,"title":"Tracking issue for Add a generic string pattern matching API (RFC 528)","state":"CLOSED","url":"https://github.com/rust-lang/rust/issues/22477","owner":"rust-lang","repo":"rust"}],"state":"CLOSED","file_name":"0528-string-patterns.md"},{"number":"0529","short_title":"conversion-traits","issues":[{"number":23567,"title":"Implement generic conversion traits","state":"CLOSED","url":"https://github.com/rust-lang/rust/issues/23567","owner":"rust-lang","repo":"rust"}],"state":"CLOSED","file_name":"0529-conversion-traits.md"},{"number":"0532","short_title":"self-in-use","issues":[{"number":20361,"title":"Tracking issue for RFC #532: change `mod` to `self` in use items","state":"CLOSED","url":"https://github.com/rust-lang/rust/issues/20361","owner":"rust-lang","repo":"rust"}],"state":"CLOSED","file_name":"0532-self-in-use.md"},{"number":"0533","short_title":"no-array-elem-moves","issues":[{"number":21963,"title":"Forbid some moves out of array elements (RFC #533)","state":"CLOSED","url":"https://github.com/rust-lang/rust/issues/21963","owner":"rust-lang","repo":"rust"}],"state":"CLOSED","file_name":"0533-no-array-elem-moves.md"},{"number":"0534","short_title":"deriving2derive","issues":[{"number":20362,"title":"Tracking Issue for RFC 534: rename deriving to derive","state":"CLOSED","url":"https://github.com/rust-lang/rust/issues/20362","owner":"rust-lang","repo":"rust"}],"state":"CLOSED","file_name":"0534-deriving2derive.md"},{"number":"0544","short_title":"rename-int-uint","issues":[{"number":20639,"title":"Tracking issue for Rename `int/uint` to `isize/usize` (RFC 544)","state":"CLOSED","url":"https://github.com/rust-lang/rust/issues/20639","owner":"rust-lang","repo":"rust"}],"state":"CLOSED","file_name":"0544-rename-int-uint.md"},{"number":"0546","short_title":"Self-not-sized-by-default","issues":[{"number":20497,"title":"Remove default Sized bound on trait Self param","state":"CLOSED","url":"https://github.com/rust-lang/rust/issues/20497","owner":"rust-lang","repo":"rust"}],"state":"CLOSED","file_name":"0546-Self-not-sized-by-default.md"},{"number":"0550","short_title":"macro-future-proofing","issues":[{"number":20563,"title":"Macro input future proofing","state":"MERGED","url":"https://github.com/rust-lang/rust/pull/20563","owner":"rust-lang","repo":"rust"},{"number":31135,"title":"Add `[` to the follow set for `ty`","state":"CLOSED","url":"https://github.com/rust-lang/rust/issues/31135","owner":"rust-lang","repo":"rust"}],"state":"CLOSED","file_name":"0550-macro-future-proofing.md"},{"number":"0556","short_title":"raw-lifetime","issues":[{"number":21923,"title":"Audit raw pointer to reference conventions","state":"CLOSED","url":"https://github.com/rust-lang/rust/issues/21923","owner":"rust-lang","repo":"rust"}],"state":"CLOSED","file_name":"0556-raw-lifetime.md"},{"number":"0558","short_title":"require-parentheses-for-chained-comparisons","issues":[{"number":20724,"title":"Tracking issue for RFC 558: require parentheses for chained comparisons","state":"CLOSED","url":"https://github.com/rust-lang/rust/issues/20724","owner":"rust-lang","repo":"rust"}],"state":"CLOSED","file_name":"0558-require-parentheses-for-chained-comparisons.md"},{"number":"0560","short_title":"integer-overflow","issues":[{"number":22020,"title":"Tracking issue for Integer Overflow (RFC 560)","state":"CLOSED","url":"https://github.com/rust-lang/rust/issues/22020","owner":"rust-lang","repo":"rust"}],"state":"CLOSED","file_name":"0560-integer-overflow.md"},{"number":"0563","short_title":"remove-ndebug","issues":[{"number":22492,"title":"Remove ndebug and replace with compiler flags (RFC 563)","state":"CLOSED","url":"https://github.com/rust-lang/rust/issues/22492","owner":"rust-lang","repo":"rust"}],"state":"CLOSED","file_name":"0563-remove-ndebug.md"},{"number":"0565","short_title":"show-string-guidelines","issues":[{"number":21436,"title":"Audit fmt::{Display,Debug} implementations (also rename from String/Show)","state":"CLOSED","url":"https://github.com/rust-lang/rust/issues/21436","owner":"rust-lang","repo":"rust"}],"state":"CLOSED","file_name":"0565-show-string-guidelines.md"},{"number":"0572","short_title":"rustc-attribute","issues":[{"number":22203,"title":"Tracking issue for RFC #572: feature gate unused attributes","state":"CLOSED","url":"https://github.com/rust-lang/rust/issues/22203","owner":"rust-lang","repo":"rust"}],"state":"CLOSED","file_name":"0572-rustc-attribute.md"},{"number":"0574","short_title":"drain-range","issues":[{"number":23055,"title":"Tracking issue for Replace `Vec::drain` by a method that accepts a range parameter (RFC 574)","state":"CLOSED","url":"https://github.com/rust-lang/rust/issues/23055","owner":"rust-lang","repo":"rust"}],"state":"CLOSED","file_name":"0574-drain-range.md"},{"number":"0580","short_title":"rename-collections","issues":[{"number":22479,"title":"Tracking issue for Rename some of the standard collections for consistency and clarity (RFC 580)","state":"CLOSED","url":"https://github.com/rust-lang/rust/issues/22479","owner":"rust-lang","repo":"rust"}],"state":"CLOSED","file_name":"0580-rename-collections.md"},{"number":"0587","short_title":"fn-return-should-be-an-associated-type","issues":[{"number":21527,"title":"Make return type of fn traits an assoc type","state":"CLOSED","url":"https://github.com/rust-lang/rust/issues/21527","owner":"rust-lang","repo":"rust"}],"state":"CLOSED","file_name":"0587-fn-return-should-be-an-associated-type.md"},{"number":"0592","short_title":"c-str-deref","issues":[{"number":22469,"title":"Tracking issue for CStr, the dereferenced complement to CString (RFC 592)","state":"CLOSED","url":"https://github.com/rust-lang/rust/issues/22469","owner":"rust-lang","repo":"rust"}],"state":"CLOSED","file_name":"0592-c-str-deref.md"},{"number":"0593","short_title":"forbid-Self-definitions","issues":[{"number":22137,"title":"Make Self a keyword","state":"CLOSED","url":"https://github.com/rust-lang/rust/issues/22137","owner":"rust-lang","repo":"rust"}],"state":"CLOSED","file_name":"0593-forbid-Self-definitions.md"},{"number":"0599","short_title":"default-object-bound","issues":[{"number":22211,"title":"Tracking issue for Introduce a default object lifetime bound (RFC 599)","state":"CLOSED","url":"https://github.com/rust-lang/rust/issues/22211","owner":"rust-lang","repo":"rust"}],"state":"CLOSED","file_name":"0599-default-object-bound.md"},{"number":"0601","short_title":"replace-be-with-become","issues":[{"number":22141,"title":"Replace `be` reserved word with `become`","state":"CLOSED","url":"https://github.com/rust-lang/rust/issues/22141","owner":"rust-lang","repo":"rust"}],"state":"CLOSED","file_name":"0601-replace-be-with-become.md"},{"number":"0639","short_title":"discriminant-intrinsic","issues":[{"number":24263,"title":"discriminant_value intrinsic -- tracking issue for 639","state":"CLOSED","url":"https://github.com/rust-lang/rust/issues/24263","owner":"rust-lang","repo":"rust"}],"state":"CLOSED","file_name":"0639-discriminant-intrinsic.md"},{"number":"0640","short_title":"debug-improvements","issues":[{"number":23083,"title":"Implement Debug Improvments","state":"CLOSED","url":"https://github.com/rust-lang/rust/issues/23083","owner":"rust-lang","repo":"rust"}],"state":"CLOSED","file_name":"0640-debug-improvements.md"},{"number":"0702","short_title":"rangefull-expression","issues":[{"number":21879,"title":"Tracking issue fo RFC #702: `..` syntax for FullRange","state":"CLOSED","url":"https://github.com/rust-lang/rust/issues/21879","owner":"rust-lang","repo":"rust"}],"state":"CLOSED","file_name":"0702-rangefull-expression.md"},{"number":"0735","short_title":"allow-inherent-impls-anywhere","issues":[{"number":22563,"title":"Don't require impls next to structs","state":"CLOSED","url":"https://github.com/rust-lang/rust/issues/22563","owner":"rust-lang","repo":"rust"}],"state":"CLOSED","file_name":"0735-allow-inherent-impls-anywhere.md"},{"number":"0736","short_title":"privacy-respecting-fru","issues":[{"number":21407,"title":"Functional record update should respect privacy (or consume a non-Copy source)","state":"CLOSED","url":"https://github.com/rust-lang/rust/issues/21407","owner":"rust-lang","repo":"rust"}],"state":"CLOSED","file_name":"0736-privacy-respecting-fru.md"},{"number":"0738","short_title":"variance","issues":[{"number":22212,"title":"Tracking issue for Support variance for type parameters (RFC 738)","state":"CLOSED","url":"https://github.com/rust-lang/rust/issues/22212","owner":"rust-lang","repo":"rust"}],"state":"CLOSED","file_name":"0738-variance.md"},{"number":"0769","short_title":"sound-generic-drop","issues":[{"number":8861,"title":"New destructor semantics","state":"CLOSED","url":"https://github.com/rust-lang/rust/issues/8861","owner":"rust-lang","repo":"rust"}],"state":"CLOSED","file_name":"0769-sound-generic-drop.md"},{"number":"0771","short_title":"std-iter-once","issues":[{"number":24443,"title":"Tracking issue for Std::iter::{once, empty} (RFC 771)","state":"CLOSED","url":"https://github.com/rust-lang/rust/issues/24443","owner":"rust-lang","repo":"rust"}],"state":"CLOSED","file_name":"0771-std-iter-once.md"},{"number":"0809","short_title":"box-and-in-for-stdlib","issues":[{"number":22181,"title":"`box` and `in` expressions (tracking issue for RFC 809)","state":"CLOSED","url":"https://github.com/rust-lang/rust/issues/22181","owner":"rust-lang","repo":"rust"}],"state":"CLOSED","file_name":"0809-box-and-in-for-stdlib.md"},{"number":"0823","short_title":"hash-simplification","issues":[{"number":22467,"title":"Tracking issue for Simplify `std::hash` (RFC 823)","state":"CLOSED","url":"https://github.com/rust-lang/rust/issues/22467","owner":"rust-lang","repo":"rust"}],"state":"CLOSED","file_name":"0823-hash-simplification.md"},{"number":"0832","short_title":"from-elem-with-love","issues":[{"number":22414,"title":"Tracking issue:  Add back `Vec::from_elem` (RFC 832)","state":"CLOSED","url":"https://github.com/rust-lang/rust/issues/22414","owner":"rust-lang","repo":"rust"}],"state":"CLOSED","file_name":"0832-from-elem-with-love.md"},{"number":"0839","short_title":"embrace-extend-extinguish","issues":[{"number":25976,"title":"Implement Extend<&T> where T: Copy for collections","state":"CLOSED","url":"https://github.com/rust-lang/rust/issues/25976","owner":"rust-lang","repo":"rust"}],"state":"CLOSED","file_name":"0839-embrace-extend-extinguish.md"},{"number":"0840","short_title":"no-panic-in-c-string","issues":[{"number":22470,"title":"Tracking issue for Get panics out of std::ffi::CString (RFC 840)","state":"CLOSED","url":"https://github.com/rust-lang/rust/issues/22470","owner":"rust-lang","repo":"rust"}],"state":"CLOSED","file_name":"0840-no-panic-in-c-string.md"},{"number":"0873","short_title":"type-macros","issues":[{"number":27245,"title":"Allow macros in type positions","state":"CLOSED","url":"https://github.com/rust-lang/rust/issues/27245","owner":"rust-lang","repo":"rust"}],"state":"CLOSED","file_name":"0873-type-macros.md"},{"number":"0879","short_title":"small-base-lexing","issues":[{"number":23872,"title":"Lex binary and octal literals more eagerly.","state":"MERGED","url":"https://github.com/rust-lang/rust/pull/23872","owner":"rust-lang","repo":"rust"}],"state":"CLOSED","file_name":"0879-small-base-lexing.md"},{"number":"0888","short_title":"compiler-fence-intrinsics","issues":[{"number":24118,"title":"Implement compiler fences","state":"CLOSED","url":"https://github.com/rust-lang/rust/issues/24118","owner":"rust-lang","repo":"rust"}],"state":"CLOSED","file_name":"0888-compiler-fence-intrinsics.md"},{"number":"0909","short_title":"move-thread-local-to-std-thread","issues":[{"number":23547,"title":"Tracking issue for Move `std::thread_local::*` into `std::thread` (RFC 909)","state":"CLOSED","url":"https://github.com/rust-lang/rust/issues/23547","owner":"rust-lang","repo":"rust"}],"state":"CLOSED","file_name":"0909-move-thread-local-to-std-thread.md"},{"number":"0921","short_title":"entry_v3","issues":[{"number":23508,"title":"Tracking issue for Entry API V3","state":"CLOSED","url":"https://github.com/rust-lang/rust/issues/23508","owner":"rust-lang","repo":"rust"}],"state":"CLOSED","file_name":"0921-entry_v3.md"},{"number":"0940","short_title":"hyphens-considered-harmful","issues":[{"number":23533,"title":"Tweak how hyphens in crate names are allowed","state":"CLOSED","url":"https://github.com/rust-lang/rust/issues/23533","owner":"rust-lang","repo":"rust"}],"state":"CLOSED","file_name":"0940-hyphens-considered-harmful.md"},{"number":"0953","short_title":"op-assign","issues":[{"number":28235,"title":"Tracking issue for overloaded `+=` operators (RFC 953) (feature augmented_assignments)","state":"CLOSED","url":"https://github.com/rust-lang/rust/issues/28235","owner":"rust-lang","repo":"rust"}],"state":"CLOSED","file_name":"0953-op-assign.md"},{"number":"0968","short_title":"closure-return-type-syntax","issues":[{"number":23420,"title":"Implement tweak to closure grammar","state":"CLOSED","url":"https://github.com/rust-lang/rust/issues/23420","owner":"rust-lang","repo":"rust"}],"state":"CLOSED","file_name":"0968-closure-return-type-syntax.md"},{"number":"0979","short_title":"align-splitn-with-other-languages","issues":[{"number":23911,"title":"Tracking issue for \"Align the count parameter of splitn with other languages\" (RFC 979)","state":"CLOSED","url":"https://github.com/rust-lang/rust/issues/23911","owner":"rust-lang","repo":"rust"}],"state":"CLOSED","file_name":"0979-align-splitn-with-other-languages.md"},{"number":"0980","short_title":"read-exact","issues":[{"number":27585,"title":"Tracking issue for `read_exact` (RFC #980)","state":"CLOSED","url":"https://github.com/rust-lang/rust/issues/27585","owner":"rust-lang","repo":"rust"}],"state":"CLOSED","file_name":"0980-read-exact.md"},{"number":"1014","short_title":"stdout-existential-crisis","issues":[{"number":25977,"title":"Don't panic when stdout doesn't exist","state":"CLOSED","url":"https://github.com/rust-lang/rust/issues/25977","owner":"rust-lang","repo":"rust"}],"state":"CLOSED","file_name":"1014-stdout-existential-crisis.md"},{"number":"1023","short_title":"rebalancing-coherence","issues":[{"number":23086,"title":"Forward compatibility hazard from coherence rules","state":"CLOSED","url":"https://github.com/rust-lang/rust/issues/23086","owner":"rust-lang","repo":"rust"}],"state":"CLOSED","file_name":"1023-rebalancing-coherence.md"},{"number":"1030","short_title":"prelude-additions","issues":[{"number":24538,"title":"Add Default/ToOwned/IntoIterator to the prelude","state":"CLOSED","url":"https://github.com/rust-lang/rust/issues/24538","owner":"rust-lang","repo":"rust"}],"state":"CLOSED","file_name":"1030-prelude-additions.md"},{"number":"1040","short_title":"duration-reform","issues":[{"number":24874,"title":"Tracking issue for Duration Reform (RFC 1040)","state":"CLOSED","url":"https://github.com/rust-lang/rust/issues/24874","owner":"rust-lang","repo":"rust"}],"state":"CLOSED","file_name":"1040-duration-reform.md"},{"number":"1044","short_title":"io-fs-2.1","issues":[{"number":24796,"title":"Tracking issue for std::fs extensions (RFC #1044)","state":"CLOSED","url":"https://github.com/rust-lang/rust/issues/24796","owner":"rust-lang","repo":"rust"}],"state":"CLOSED","file_name":"1044-io-fs-2.1.md"},{"number":"1047","short_title":"socket-timeouts","issues":[{"number":25619,"title":"Implement socket timeouts","state":"CLOSED","url":"https://github.com/rust-lang/rust/issues/25619","owner":"rust-lang","repo":"rust"}],"state":"CLOSED","file_name":"1047-socket-timeouts.md"},{"number":"1048","short_title":"rename-soft-link-to-symlink","issues":[{"number":24222,"title":"Deprecate std::fs::soft_link in favor of platform-specific versions","state":"MERGED","url":"https://github.com/rust-lang/rust/pull/24222","owner":"rust-lang","repo":"rust"}],"state":"CLOSED","file_name":"1048-rename-soft-link-to-symlink.md"},{"number":"1054","short_title":"str-words","issues":[{"number":24543,"title":"Rename str::words to str::split_whitespace","state":"CLOSED","url":"https://github.com/rust-lang/rust/issues/24543","owner":"rust-lang","repo":"rust"}],"state":"CLOSED","file_name":"1054-str-words.md"},{"number":"1057","short_title":"io-error-sync","issues":[{"number":24133,"title":"Add `Sync` to the bounds in `io::Error`","state":"MERGED","url":"https://github.com/rust-lang/rust/pull/24133","owner":"rust-lang","repo":"rust"}],"state":"CLOSED","file_name":"1057-io-error-sync.md"},{"number":"1058","short_title":"slice-tail-redesign","issues":[{"number":26906,"title":"Rename slice::{tail, init} per RFC 1058","state":"CLOSED","url":"https://github.com/rust-lang/rust/issues/26906","owner":"rust-lang","repo":"rust"}],"state":"CLOSED","file_name":"1058-slice-tail-redesign.md"},{"number":"1066","short_title":"safe-mem-forget","issues":[{"number":25186,"title":"Tracking issue for Alter mem::forget to be safe (RFC 1066)","state":"CLOSED","url":"https://github.com/rust-lang/rust/issues/25186","owner":"rust-lang","repo":"rust"}],"state":"CLOSED","file_name":"1066-safe-mem-forget.md"},{"number":"1096","short_title":"remove-static-assert","issues":[{"number":24910,"title":"Remove #[static_assert]","state":"MERGED","url":"https://github.com/rust-lang/rust/pull/24910","owner":"rust-lang","repo":"rust"}],"state":"CLOSED","file_name":"1096-remove-static-assert.md"},{"number":"1102","short_title":"rename-connect-to-join","issues":[{"number":26900,"title":"Rename SliceConcatExt::connect to join","state":"CLOSED","url":"https://github.com/rust-lang/rust/issues/26900","owner":"rust-lang","repo":"rust"}],"state":"CLOSED","file_name":"1102-rename-connect-to-join.md"},{"number":"1119","short_title":"result-expect","issues":[{"number":25359,"title":"libcore/Result - Add an `expect` method that prints a message and the `Err` value","state":"MERGED","url":"https://github.com/rust-lang/rust/pull/25359","owner":"rust-lang","repo":"rust"}],"state":"CLOSED","file_name":"1119-result-expect.md"},{"number":"1123","short_title":"str-split-at","issues":[{"number":25839,"title":"Implement str::split_at (RFC 1123)","state":"MERGED","url":"https://github.com/rust-lang/rust/pull/25839","owner":"rust-lang","repo":"rust"}],"state":"CLOSED","file_name":"1123-str-split-at.md"},{"number":"1135","short_title":"raw-pointer-comparisons","issues":[{"number":28236,"title":"Tracking issue for raw fat pointer comparisons (RFC #1135)","state":"CLOSED","url":"https://github.com/rust-lang/rust/issues/28236","owner":"rust-lang","repo":"rust"}],"state":"CLOSED","file_name":"1135-raw-pointer-comparisons.md"},{"number":"1152","short_title":"slice-string-symmetry","issues":[{"number":26697,"title":"Add conversions from Box<str> and String","state":"CLOSED","url":"https://github.com/rust-lang/rust/issues/26697","owner":"rust-lang","repo":"rust"}],"state":"CLOSED","file_name":"1152-slice-string-symmetry.md"},{"number":"1156","short_title":"adjust-default-object-bounds","issues":[{"number":26438,"title":"Tracking issue for Adjust default object bounds (RFC 1156)","state":"CLOSED","url":"https://github.com/rust-lang/rust/issues/26438","owner":"rust-lang","repo":"rust"}],"state":"CLOSED","file_name":"1156-adjust-default-object-bounds.md"},{"number":"1174","short_title":"into-raw-fd-socket-handle-traits","issues":[{"number":27062,"title":"Add IntoRaw{Fd, Socket, Handle} traits","state":"CLOSED","url":"https://github.com/rust-lang/rust/issues/27062","owner":"rust-lang","repo":"rust"}],"state":"CLOSED","file_name":"1174-into-raw-fd-socket-handle-traits.md"},{"number":"1183","short_title":"swap-out-jemalloc","issues":[{"number":27389,"title":"Tracking issue for changing the global, default allocator (RFC 1974)","state":"CLOSED","url":"https://github.com/rust-lang/rust/issues/27389","owner":"rust-lang","repo":"rust"}],"state":"CLOSED","file_name":"1183-swap-out-jemalloc.md"},{"number":"1184","short_title":"stabilize-no_std","issues":[{"number":27394,"title":"Tracking issue for `no_std` (RFC #1184)","state":"CLOSED","url":"https://github.com/rust-lang/rust/issues/27394","owner":"rust-lang","repo":"rust"}],"state":"CLOSED","file_name":"1184-stabilize-no_std.md"},{"number":"1192","short_title":"inclusive-ranges","issues":[{"number":28237,"title":"Tracking issue for `..=` inclusive ranges (RFC #1192) -- originally `...`","state":"CLOSED","url":"https://github.com/rust-lang/rust/issues/28237","owner":"rust-lang","repo":"rust"}],"state":"CLOSED","file_name":"1192-inclusive-ranges.md"},{"number":"1193","short_title":"cap-lints","issues":[{"number":27259,"title":"Implement a cap on lints on the rustc CLI","state":"CLOSED","url":"https://github.com/rust-lang/rust/issues/27259","owner":"rust-lang","repo":"rust"}],"state":"CLOSED","file_name":"1193-cap-lints.md"},{"number":"1194","short_title":"set-recovery","issues":[{"number":28050,"title":"Set recovery methods","state":"CLOSED","url":"https://github.com/rust-lang/rust/issues/28050","owner":"rust-lang","repo":"rust"}],"state":"CLOSED","file_name":"1194-set-recovery.md"},{"number":"1211","short_title":"mir","issues":[{"number":27840,"title":"Tracking issue for MIR (RFC #1211)","state":"CLOSED","url":"https://github.com/rust-lang/rust/issues/27840","owner":"rust-lang","repo":"rust"}],"state":"CLOSED","file_name":"1211-mir.md"},{"number":"1212","short_title":"line-endings","issues":[{"number":28032,"title":"Implement new semantics for lines(), deprecate lines_any()","state":"CLOSED","url":"https://github.com/rust-lang/rust/issues/28032","owner":"rust-lang","repo":"rust"}],"state":"CLOSED","file_name":"1212-line-endings.md"},{"number":"1219","short_title":"use-group-as","issues":[{"number":27578,"title":"Tracking issue for the `use_group_as` RFC","state":"CLOSED","url":"https://github.com/rust-lang/rust/issues/27578","owner":"rust-lang","repo":"rust"}],"state":"CLOSED","file_name":"1219-use-group-as.md"},{"number":"1228","short_title":"placement-left-arrow","issues":[{"number":27779,"title":"Tracking issue for placement new","state":"CLOSED","url":"https://github.com/rust-lang/rust/issues/27779","owner":"rust-lang","repo":"rust"}],"state":"CLOSED","file_name":"1228-placement-left-arrow.md"},{"number":"1236","short_title":"stabilize-catch-panic","issues":[{"number":27719,"title":"Tracking issue for `recover` stabilization","state":"CLOSED","url":"https://github.com/rust-lang/rust/issues/27719","owner":"rust-lang","repo":"rust"}],"state":"CLOSED","file_name":"1236-stabilize-catch-panic.md"},{"number":"1241","short_title":"no-wildcard-deps","issues":[{"number":28628,"title":"Tracking issue for forbidding wildcard deps on crates.io","state":"CLOSED","url":"https://github.com/rust-lang/rust/issues/28628","owner":"rust-lang","repo":"rust"}],"state":"CLOSED","file_name":"1241-no-wildcard-deps.md"},{"number":"1252","short_title":"open-options","issues":[{"number":30014,"title":"Tracking issue for OpenOptions expansion","state":"CLOSED","url":"https://github.com/rust-lang/rust/issues/30014","owner":"rust-lang","repo":"rust"}],"state":"CLOSED","file_name":"1252-open-options.md"},{"number":"1257","short_title":"drain-range-2","issues":[{"number":27711,"title":"Tracking issue for `drain` stabilization","state":"CLOSED","url":"https://github.com/rust-lang/rust/issues/27711","owner":"rust-lang","repo":"rust"}],"state":"CLOSED","file_name":"1257-drain-range-2.md"},{"number":"1270","short_title":"deprecation","issues":[{"number":29935,"title":"Tracking issue for `#[deprecated]`","state":"CLOSED","url":"https://github.com/rust-lang/rust/issues/29935","owner":"rust-lang","repo":"rust"}],"state":"CLOSED","file_name":"1270-deprecation.md"},{"number":"1288","short_title":"time-improvements","issues":[{"number":29866,"title":"Expand the std::time module","state":"CLOSED","url":"https://github.com/rust-lang/rust/issues/29866","owner":"rust-lang","repo":"rust"}],"state":"CLOSED","file_name":"1288-time-improvements.md"},{"number":"1307","short_title":"osstring-methods","issues":[{"number":29453,"title":"Add Capacity/length methods for OsString","state":"CLOSED","url":"https://github.com/rust-lang/rust/issues/29453","owner":"rust-lang","repo":"rust"}],"state":"CLOSED","file_name":"1307-osstring-methods.md"},{"number":"1317","short_title":"ide","issues":[{"number":31548,"title":"Tracking issue for the Rust Language Server","state":"CLOSED","url":"https://github.com/rust-lang/rust/issues/31548","owner":"rust-lang","repo":"rust"}],"state":"CLOSED","file_name":"1317-ide.md"},{"number":"1328","short_title":"global-panic-handler","issues":[{"number":30449,"title":"Custom panic handlers in the standard library","state":"CLOSED","url":"https://github.com/rust-lang/rust/issues/30449","owner":"rust-lang","repo":"rust"}],"state":"CLOSED","file_name":"1328-global-panic-handler.md"},{"number":"1358","short_title":"repr-align","issues":[{"number":33626,"title":"implement `#[repr(align)]` (tracking issue for RFC 1358)","state":"CLOSED","url":"https://github.com/rust-lang/rust/issues/33626","owner":"rust-lang","repo":"rust"}],"state":"CLOSED","file_name":"1358-repr-align.md"},{"number":"1359","short_title":"process-ext-unix","issues":[{"number":31398,"title":"Tracking issue for CommandExt::before_exec","state":"CLOSED","url":"https://github.com/rust-lang/rust/issues/31398","owner":"rust-lang","repo":"rust"}],"state":"CLOSED","file_name":"1359-process-ext-unix.md"},{"number":"1414","short_title":"rvalue_static_promotion","issues":[{"number":38865,"title":"Tracking issue: Rvalue static promotion","state":"CLOSED","url":"https://github.com/rust-lang/rust/issues/38865","owner":"rust-lang","repo":"rust"}],"state":"CLOSED","file_name":"1414-rvalue_static_promotion.md"},{"number":"1415","short_title":"trim-std-os","issues":[{"number":31549,"title":"Tracking issue for deprecating std::os::*::raw types","state":"CLOSED","url":"https://github.com/rust-lang/rust/issues/31549","owner":"rust-lang","repo":"rust"}],"state":"CLOSED","file_name":"1415-trim-std-os.md"},{"number":"1419","short_title":"slice-copy","issues":[{"number":31755,"title":"Tracking issue for <[T]>::copy_from_slice","state":"CLOSED","url":"https://github.com/rust-lang/rust/issues/31755","owner":"rust-lang","repo":"rust"}],"state":"CLOSED","file_name":"1419-slice-copy.md"},{"number":"1422","short_title":"pub-restricted","issues":[{"number":32409,"title":"Tracking issue for `pub(restricted)` privacy (RFC #1422)","state":"CLOSED","url":"https://github.com/rust-lang/rust/issues/32409","owner":"rust-lang","repo":"rust"}],"state":"CLOSED","file_name":"1422-pub-restricted.md"},{"number":"1432","short_title":"replace-slice","issues":[{"number":32310,"title":"Tracking issue for {Vec,String}::splice","state":"CLOSED","url":"https://github.com/rust-lang/rust/issues/32310","owner":"rust-lang","repo":"rust"}],"state":"CLOSED","file_name":"1432-replace-slice.md"},{"number":"1440","short_title":"drop-types-in-const","issues":[{"number":33156,"title":"permit `Drop` types in constants (tracking issue for RFC #1440)","state":"CLOSED","url":"https://github.com/rust-lang/rust/issues/33156","owner":"rust-lang","repo":"rust"}],"state":"CLOSED","file_name":"1440-drop-types-in-const.md"},{"number":"1443","short_title":"extended-compare-and-swap","issues":[{"number":31767,"title":"Tracking issue for compare_exchange","state":"CLOSED","url":"https://github.com/rust-lang/rust/issues/31767","owner":"rust-lang","repo":"rust"}],"state":"CLOSED","file_name":"1443-extended-compare-and-swap.md"},{"number":"1461","short_title":"net2-mutators","issues":[{"number":31766,"title":"Tracking issue for adding some net2 methods to std","state":"CLOSED","url":"https://github.com/rust-lang/rust/issues/31766","owner":"rust-lang","repo":"rust"}],"state":"CLOSED","file_name":"1461-net2-mutators.md"},{"number":"1467","short_title":"volatile","issues":[{"number":31756,"title":"Tracking issue for ptr::{read,write}_volatile","state":"CLOSED","url":"https://github.com/rust-lang/rust/issues/31756","owner":"rust-lang","repo":"rust"}],"state":"CLOSED","file_name":"1467-volatile.md"},{"number":"1479","short_title":"unix-socket","issues":[{"number":32312,"title":"Tracking issue for Unix Sockets in the standard library","state":"CLOSED","url":"https://github.com/rust-lang/rust/issues/32312","owner":"rust-lang","repo":"rust"}],"state":"CLOSED","file_name":"1479-unix-socket.md"},{"number":"1492","short_title":"dotdot-in-patterns","issues":[{"number":33627,"title":"`..` in tuple-like patterns (tracking issue for RFC 1492)","state":"CLOSED","url":"https://github.com/rust-lang/rust/issues/33627","owner":"rust-lang","repo":"rust"}],"state":"CLOSED","file_name":"1492-dotdot-in-patterns.md"},{"number":"1498","short_title":"ipv6addr-octets","issues":[{"number":32313,"title":"Tracking issue for Ipv6Addr octet methods","state":"CLOSED","url":"https://github.com/rust-lang/rust/issues/32313","owner":"rust-lang","repo":"rust"}],"state":"CLOSED","file_name":"1498-ipv6addr-octets.md"},{"number":"1506","short_title":"adt-kinds","issues":[{"number":35626,"title":"Tracking issue for \"clarified ADT kinds\" (RFC 1506)","state":"CLOSED","url":"https://github.com/rust-lang/rust/issues/35626","owner":"rust-lang","repo":"rust"}],"state":"CLOSED","file_name":"1506-adt-kinds.md"},{"number":"1510","short_title":"cdylib","issues":[{"number":33132,"title":"Tracking issue for adding a new cdylib crate type","state":"CLOSED","url":"https://github.com/rust-lang/rust/issues/33132","owner":"rust-lang","repo":"rust"}],"state":"CLOSED","file_name":"1510-cdylib.md"},{"number":"1521","short_title":"copy-clone-semantics","issues":[{"number":33416,"title":"Document that T: Copy + Clone should have \"obvious\" Clone impl","state":"CLOSED","url":"https://github.com/rust-lang/rust/issues/33416","owner":"rust-lang","repo":"rust"}],"state":"CLOSED","file_name":"1521-copy-clone-semantics.md"},{"number":"1525","short_title":"cargo-workspace","issues":[{"number":2122,"title":"Improve multi-crate project management","state":"CLOSED","url":"https://github.com/rust-lang/cargo/issues/2122","owner":"rust-lang","repo":"cargo"}],"state":"CLOSED","file_name":"1525-cargo-workspace.md"},{"number":"1535","short_title":"stable-overflow-checks","issues":[{"number":33134,"title":"Tracking issue for -C overflow-checks","state":"CLOSED","url":"https://github.com/rust-lang/rust/issues/33134","owner":"rust-lang","repo":"rust"}],"state":"CLOSED","file_name":"1535-stable-overflow-checks.md"},{"number":"1552","short_title":"contains-method-for-various-collections","issues":[{"number":32630,"title":"Tracking issue for {VecDeque,LinkedList}::contains","state":"CLOSED","url":"https://github.com/rust-lang/rust/issues/32630","owner":"rust-lang","repo":"rust"}],"state":"CLOSED","file_name":"1552-contains-method-for-various-collections.md"},{"number":"1559","short_title":"attributes-with-literals","issues":[{"number":34981,"title":"Allow all literals in attributes (Tracking Issue for RFC #1559)","state":"CLOSED","url":"https://github.com/rust-lang/rust/issues/34981","owner":"rust-lang","repo":"rust"}],"state":"CLOSED","file_name":"1559-attributes-with-literals.md"},{"number":"1560","short_title":"name-resolution","issues":[{"number":35120,"title":"Tracking issue for changes to name resolution (RFC 1560)","state":"CLOSED","url":"https://github.com/rust-lang/rust/issues/35120","owner":"rust-lang","repo":"rust"}],"state":"CLOSED","file_name":"1560-name-resolution.md"},{"number":"1561","short_title":"macro-naming","issues":[{"number":35896,"title":"Tracking issue for \"macro naming and modularisation\" (RFC #1561)","state":"CLOSED","url":"https://github.com/rust-lang/rust/issues/35896","owner":"rust-lang","repo":"rust"}],"state":"CLOSED","file_name":"1561-macro-naming.md"},{"number":"1581","short_title":"fused-iterator","issues":[{"number":35602,"title":"FusedIterator marker trait for iter::Fuse specialization","state":"CLOSED","url":"https://github.com/rust-lang/rust/issues/35602","owner":"rust-lang","repo":"rust"}],"state":"CLOSED","file_name":"1581-fused-iterator.md"},{"number":"1618","short_title":"ergonomic-format-args","issues":[{"number":33642,"title":"Ergonomic format_args!","state":"MERGED","url":"https://github.com/rust-lang/rust/pull/33642","owner":"rust-lang","repo":"rust"}],"state":"CLOSED","file_name":"1618-ergonomic-format-args.md"},{"number":"1623","short_title":"static","issues":[{"number":35897,"title":"Tracking issue for static lifetime in statics (RFC #1623)","state":"CLOSED","url":"https://github.com/rust-lang/rust/issues/35897","owner":"rust-lang","repo":"rust"}],"state":"CLOSED","file_name":"1623-static.md"},{"number":"1624","short_title":"loop-break-value","issues":[{"number":37339,"title":"Tracking issue for RFC 1624: `break` with values for `loop`","state":"CLOSED","url":"https://github.com/rust-lang/rust/issues/37339","owner":"rust-lang","repo":"rust"}],"state":"CLOSED","file_name":"1624-loop-break-value.md"},{"number":"1636","short_title":"document_all_features","issues":[{"number":9,"title":"Document all features","state":"CLOSED","url":"https://github.com/rust-lang-nursery/reference/issues/9","owner":"rust-lang-nursery","repo":"reference"}],"state":"CLOSED","file_name":"1636-document_all_features.md"},{"number":"1640","short_title":"duration-checked-sub","issues":[{"number":35774,"title":"Tracking issue for check methods on Duration","state":"CLOSED","url":"https://github.com/rust-lang/rust/issues/35774","owner":"rust-lang","repo":"rust"}],"state":"CLOSED","file_name":"1640-duration-checked-sub.md"},{"number":"1649","short_title":"atomic-access","issues":[{"number":35603,"title":"Tracking issue for Atomic*::{get_mut, into_inner}","state":"CLOSED","url":"https://github.com/rust-lang/rust/issues/35603","owner":"rust-lang","repo":"rust"}],"state":"CLOSED","file_name":"1649-atomic-access.md"},{"number":"1651","short_title":"movecell","issues":[{"number":39264,"title":"Tracking issue for RFC 1651: Extend Cell to non-Copy types ","state":"CLOSED","url":"https://github.com/rust-lang/rust/issues/39264","owner":"rust-lang","repo":"rust"}],"state":"CLOSED","file_name":"1651-movecell.md"},{"number":"1653","short_title":"assert_ne","issues":[{"number":35073,"title":"Tracking issue for the assert_ne and debug_assert_ne macros","state":"CLOSED","url":"https://github.com/rust-lang/rust/issues/35073","owner":"rust-lang","repo":"rust"}],"state":"CLOSED","file_name":"1653-assert_ne.md"},{"number":"1660","short_title":"try-borrow","issues":[{"number":35070,"title":"Tracking issue for RefCell::{try_borrow, try_borrow_mut}","state":"CLOSED","url":"https://github.com/rust-lang/rust/issues/35070","owner":"rust-lang","repo":"rust"}],"state":"CLOSED","file_name":"1660-try-borrow.md"},{"number":"1665","short_title":"windows-subsystem","issues":[{"number":37499,"title":"Tracking issue for Windows subsystem support","state":"CLOSED","url":"https://github.com/rust-lang/rust/issues/37499","owner":"rust-lang","repo":"rust"}],"state":"CLOSED","file_name":"1665-windows-subsystem.md"},{"number":"1679","short_title":"panic-safe-slicing","issues":[{"number":35729,"title":"Tracking issue for the `SliceIndex` trait","state":"CLOSED","url":"https://github.com/rust-lang/rust/issues/35729","owner":"rust-lang","repo":"rust"}],"state":"CLOSED","file_name":"1679-panic-safe-slicing.md"},{"number":"1681","short_title":"macros-1.1","issues":[{"number":35900,"title":"Tracking issue for \"Macros 1.1\" (RFC #1681)","state":"CLOSED","url":"https://github.com/rust-lang/rust/issues/35900","owner":"rust-lang","repo":"rust"}],"state":"CLOSED","file_name":"1681-macros-1.1.md"},{"number":"1682","short_title":"field-init-shorthand","issues":[{"number":37340,"title":"Tracking issue for RFC 1682: field init shorthand","state":"CLOSED","url":"https://github.com/rust-lang/rust/issues/37340","owner":"rust-lang","repo":"rust"}],"state":"CLOSED","file_name":"1682-field-init-shorthand.md"},{"number":"1695","short_title":"add-error-macro","issues":[{"number":40872,"title":"Tracking issue for the addition of the compile_error! macro","state":"CLOSED","url":"https://github.com/rust-lang/rust/issues/40872","owner":"rust-lang","repo":"rust"}],"state":"CLOSED","file_name":"1695-add-error-macro.md"},{"number":"1696","short_title":"discriminant","issues":[{"number":24263,"title":"discriminant_value intrinsic -- tracking issue for 639","state":"CLOSED","url":"https://github.com/rust-lang/rust/issues/24263","owner":"rust-lang","repo":"rust"},{"number":34785,"title":"[RFC accepted] add wrapper for discriminant_value intrinsic","state":"CLOSED","url":"https://github.com/rust-lang/rust/pull/34785","owner":"rust-lang","repo":"rust"}],"state":"CLOSED","file_name":"1696-discriminant.md"},{"number":"1721","short_title":"crt-static","issues":[{"number":37406,"title":"Tracking issue for customizing CRT linkage","state":"CLOSED","url":"https://github.com/rust-lang/rust/issues/37406","owner":"rust-lang","repo":"rust"}],"state":"CLOSED","file_name":"1721-crt-static.md"},{"number":"1725","short_title":"unaligned-access","issues":[{"number":37955,"title":"Tracking issue for ptr::{read,write}_unaligned","state":"CLOSED","url":"https://github.com/rust-lang/rust/issues/37955","owner":"rust-lang","repo":"rust"}],"state":"CLOSED","file_name":"1725-unaligned-access.md"},{"number":"1758","short_title":"repr-transparent","issues":[{"number":43036,"title":"Tracking issue for RFC 1758: Specify `repr(transparent)`","state":"CLOSED","url":"https://github.com/rust-lang/rust/issues/43036","owner":"rust-lang","repo":"rust"}],"state":"CLOSED","file_name":"1758-repr-transparent.md"},{"number":"1828","short_title":"rust-bookshelf","issues":[{"number":39588,"title":"Tracking issue for RFC 1828: Rust Bookshelf","state":"CLOSED","url":"https://github.com/rust-lang/rust/issues/39588","owner":"rust-lang","repo":"rust"}],"state":"CLOSED","file_name":"1828-rust-bookshelf.md"},{"number":"1845","short_title":"shared-from-slice","issues":[{"number":40475,"title":"Tracking issue for `From<&[T]> for Rc` & co","state":"CLOSED","url":"https://github.com/rust-lang/rust/issues/40475","owner":"rust-lang","repo":"rust"}],"state":"CLOSED","file_name":"1845-shared-from-slice.md"},{"number":"1860","short_title":"manually-drop","issues":[{"number":40673,"title":"Tracking issue for ManuallyDrop","state":"CLOSED","url":"https://github.com/rust-lang/rust/issues/40673","owner":"rust-lang","repo":"rust"}],"state":"CLOSED","file_name":"1860-manually-drop.md"},{"number":"1869","short_title":"eprintln","issues":[{"number":40528,"title":"Tracking issue for addition of eprint/eprintln macros","state":"CLOSED","url":"https://github.com/rust-lang/rust/issues/40528","owner":"rust-lang","repo":"rust"}],"state":"CLOSED","file_name":"1869-eprintln.md"},{"number":"1884","short_title":"unstable-sort","issues":[{"number":40585,"title":"Tracking issue for unstable sort in libcore","state":"CLOSED","url":"https://github.com/rust-lang/rust/issues/40585","owner":"rust-lang","repo":"rust"}],"state":"CLOSED","file_name":"1884-unstable-sort.md"},{"number":"1925","short_title":"optional-match-vert","issues":[{"number":44101,"title":"Tracking issue for RFC 1925: Allow an optional vert at the beginning of a match branch ","state":"CLOSED","url":"https://github.com/rust-lang/rust/issues/44101","owner":"rust-lang","repo":"rust"}],"state":"CLOSED","file_name":"1925-optional-match-vert.md"},{"number":"1966","short_title":"unsafe-pointer-reform","issues":[{"number":43941,"title":"Tracking issue for Unsafe Pointer Methods reform","state":"CLOSED","url":"https://github.com/rust-lang/rust/issues/43941","owner":"rust-lang","repo":"rust"}],"state":"CLOSED","file_name":"1966-unsafe-pointer-reform.md"},{"number":"1974","short_title":"global-allocators","issues":[{"number":27389,"title":"Tracking issue for changing the global, default allocator (RFC 1974)","state":"CLOSED","url":"https://github.com/rust-lang/rust/issues/27389","owner":"rust-lang","repo":"rust"}],"state":"CLOSED","file_name":"1974-global-allocators.md"},{"number":"2025","short_title":"nested-method-calls","issues":[{"number":44100,"title":"Tracking issue for RFC 2025: Enabled nested method calls","state":"CLOSED","url":"https://github.com/rust-lang/rust/issues/44100","owner":"rust-lang","repo":"rust"}],"state":"CLOSED","file_name":"2025-nested-method-calls.md"},{"number":"2071","short_title":"impl-trait-existential-types","issues":[{"number":44685,"title":"Tracking issue for existential types (RFC 2071)","state":"CLOSED","url":"https://github.com/rust-lang/rust/issues/44685","owner":"rust-lang","repo":"rust"},{"number":44686,"title":"Tracking issue for impl trait in const/static/let","state":"CLOSED","url":"https://github.com/rust-lang/rust/issues/44686","owner":"rust-lang","repo":"rust"}],"state":"CLOSED","file_name":"2071-impl-trait-existential-types.md"},{"number":"2094","short_title":"nll","issues":[{"number":44928,"title":"Tracking issue for RFC #2094: non-lexical lifetimes ","state":"CLOSED","url":"https://github.com/rust-lang/rust/issues/44928","owner":"rust-lang","repo":"rust"}],"state":"CLOSED","file_name":"2094-nll.md"},{"number":"2124","short_title":"option-filter","issues":[{"number":45860,"title":"Tracking issue for Option::filter (feature `option_filter`)","state":"CLOSED","url":"https://github.com/rust-lang/rust/issues/45860","owner":"rust-lang","repo":"rust"}],"state":"CLOSED","file_name":"2124-option-filter.md"},{"number":"2126","short_title":"path-clarity","issues":[{"number":44660,"title":"Tracking issue for RFC 2126: Clarify and streamline paths and visibility","state":"CLOSED","url":"https://github.com/rust-lang/rust/issues/44660","owner":"rust-lang","repo":"rust"}],"state":"CLOSED","file_name":"2126-path-clarity.md"},{"number":"2128","short_title":"use-nested-groups","issues":[{"number":44494,"title":"Tracking issue for RFC 2128: Nested groups in imports","state":"CLOSED","url":"https://github.com/rust-lang/rust/issues/44494","owner":"rust-lang","repo":"rust"}],"state":"CLOSED","file_name":"2128-use-nested-groups.md"},{"number":"2132","short_title":"copy-closures","issues":[{"number":44490,"title":"Tracking issue for RFC 2132: copy_closures/clone_closures","state":"CLOSED","url":"https://github.com/rust-lang/rust/issues/44490","owner":"rust-lang","repo":"rust"}],"state":"CLOSED","file_name":"2132-copy-closures.md"},{"number":"2133","short_title":"all-the-clones","issues":[{"number":44496,"title":"Tracking issue for RFC 2133: compiler-generated Clone impls for Arrays and Tuples ","state":"CLOSED","url":"https://github.com/rust-lang/rust/issues/44496","owner":"rust-lang","repo":"rust"}],"state":"CLOSED","file_name":"2133-all-the-clones.md"},{"number":"2151","short_title":"raw-identifiers","issues":[{"number":48589,"title":"Tracking issue for RFC 2151, Raw Identifiers","state":"CLOSED","url":"https://github.com/rust-lang/rust/issues/48589","owner":"rust-lang","repo":"rust"}],"state":"CLOSED","file_name":"2151-raw-identifiers.md"},{"number":"2226","short_title":"fmt-debug-hex","issues":[{"number":48584,"title":"Tracking issue for hexadecimal integers with fmt::Debug output","state":"CLOSED","url":"https://github.com/rust-lang/rust/issues/48584","owner":"rust-lang","repo":"rust"}],"state":"CLOSED","file_name":"2226-fmt-debug-hex.md"},{"number":"2307","short_title":"concrete-nonzero-types","issues":[{"number":49137,"title":"Tracking issue for std::num::NonZero* types","state":"CLOSED","url":"https://github.com/rust-lang/rust/issues/49137","owner":"rust-lang","repo":"rust"}],"state":"CLOSED","file_name":"2307-concrete-nonzero-types.md"},{"number":"2325","short_title":"stable-simd","issues":[{"number":48556,"title":"Tracking issue for stable SIMD in Rust","state":"CLOSED","url":"https://github.com/rust-lang/rust/issues/48556","owner":"rust-lang","repo":"rust"}],"state":"CLOSED","file_name":"2325-stable-simd.md"},{"number":"2421","short_title":"unreservations-2018","issues":[{"number":51115,"title":"Tracking issue for RFC 2421, \"Keyword unreservations (pure, sizeof, alignof, offsetof)\"","state":"CLOSED","url":"https://github.com/rust-lang/rust/issues/51115","owner":"rust-lang","repo":"rust"}],"state":"CLOSED","file_name":"2421-unreservations-2018.md"}],"last_updated":"2018-08-31 12:59:35 UTC"}